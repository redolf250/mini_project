

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Jun 21 18:18:12 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	idataBANK0
   204  0E38                     __pidataBANK0:
   205                           
   206                           ;initializer for _year
   207  0E38  3412               	retlw	18
   208  0E39  3400               	retlw	0
   209                           
   210                           ;initializer for _month
   211  0E3A  3405               	retlw	5
   212  0E3B  3400               	retlw	0
   213                           
   214                           ;initializer for _day
   215  0E3C  3406               	retlw	6
   216  0E3D  3400               	retlw	0
   217                           
   218                           ;initializer for _hour
   219  0E3E  340A               	retlw	10
   220  0E3F  3400               	retlw	0
   221                           
   222                           ;initializer for _min
   223  0E40  3437               	retlw	55
   224  0E41  3400               	retlw	0
   225                           
   226                           ;initializer for _pos
   227  0E42  3407               	retlw	7
   228  001E                     _ADRESH	set	30
   229  001F                     _ADCON0bits	set	31
   230  001F                     _ADCON0	set	31
   231  0007                     _PORTCbits	set	7
   232  000D                     _PIR2bits	set	13
   233  0008                     _PORTD	set	8
   234  0013                     _SSPBUF	set	19
   235  0014                     _SSPCON	set	20
   236  0043                     _RD3	set	67
   237  0034                     _RB4	set	52
   238  0033                     _RB3	set	51
   239  0032                     _RB2	set	50
   240  0030                     _RB0	set	48
   241  0031                     _RB1	set	49
   242  0047                     _RD7	set	71
   243  0046                     _RD6	set	70
   244  0045                     _RD5	set	69
   245  0044                     _RD4	set	68
   246  0042                     _RD2	set	66
   247  0041                     _RD1	set	65
   248  0040                     _RD0	set	64
   249  0081                     _OPTION_REG	set	129
   250  0086                     _TRISB	set	134
   251  0088                     _TRISD	set	136
   252  0087                     _TRISCbits	set	135
   253  009E                     _ADRESL	set	158
   254  009F                     _ADCON1	set	159
   255  0094                     _SSPSTAT	set	148
   256  0093                     _SSPADD	set	147
   257  0091                     _SSPCON2	set	145
   258  048C                     _ACKEN	set	1164
   259  048D                     _ACKDT	set	1165
   260  048B                     _RCEN	set	1163
   261  048A                     _PEN	set	1162
   262  0488                     _SEN	set	1160
   263  043C                     _TRISC4	set	1084
   264  043B                     _TRISC3	set	1083
   265  010C                     _EEDATA	set	268
   266  010D                     _EEADR	set	269
   267  018D                     _EECON2	set	397
   268  018C                     _EECON1bits	set	396
   269                           
   270                           	psect	strings
   271  0003                     __pstrings:
   272  0003                     stringtab:
   273  0003                     __stringtab:
   274  0003                     stringcode:	
   275                           ;	String table - string pointers are 1 byte each
   276                           
   277  0003                     stringdir:
   278  0003  3000               	movlw	high stringdir
   279  0004  008A               	movwf	10
   280  0005  0804               	movf	4,w
   281  0006  0A84               	incf	4,f
   282  0007  0782               	addwf	2,f
   283  0008                     __stringbase:
   284  0008  3400               	retlw	0
   285  0009                     __end_of__stringtab:
   286  0009                     STR_3:
   287  0009  3452               	retlw	82	;'R'
   288  000A  3465               	retlw	101	;'e'
   289  000B  346C               	retlw	108	;'l'
   290  000C  3461               	retlw	97	;'a'
   291  000D  3479               	retlw	121	;'y'
   292  000E  3420               	retlw	32	;' '
   293  000F  3473               	retlw	115	;'s'
   294  0010  3474               	retlw	116	;'t'
   295  0011  3461               	retlw	97	;'a'
   296  0012  3474               	retlw	116	;'t'
   297  0013  3475               	retlw	117	;'u'
   298  0014  3473               	retlw	115	;'s'
   299  0015  343A               	retlw	58	;':'
   300  0016  3420               	retlw	32	;' '
   301  0017  3400               	retlw	0
   302  0018                     STR_6:
   303  0018  3457               	retlw	87	;'W'
   304  0019  3465               	retlw	101	;'e'
   305  001A  346C               	retlw	108	;'l'
   306  001B  3463               	retlw	99	;'c'
   307  001C  346F               	retlw	111	;'o'
   308  001D  346D               	retlw	109	;'m'
   309  001E  3465               	retlw	101	;'e'
   310  001F  3420               	retlw	32	;' '
   311  0020  3474               	retlw	116	;'t'
   312  0021  346F               	retlw	111	;'o'
   313  0022  3400               	retlw	0
   314  0023                     STR_7:
   315  0023  3472               	retlw	114	;'r'
   316  0024  3454               	retlw	84	;'T'
   317  0025  3472               	retlw	114	;'r'
   318  0026  346F               	retlw	111	;'o'
   319  0027  346E               	retlw	110	;'n'
   320  0028  3469               	retlw	105	;'i'
   321  0029  3463               	retlw	99	;'c'
   322  002A  3473               	retlw	115	;'s'
   323  002B  3400               	retlw	0
   324  002C                     STR_1:
   325  002C  3454               	retlw	84	;'T'
   326  002D  3469               	retlw	105	;'i'
   327  002E  346D               	retlw	109	;'m'
   328  002F  3465               	retlw	101	;'e'
   329  0030  343A               	retlw	58	;':'
   330  0031  3420               	retlw	32	;' '
   331  0032  3400               	retlw	0
   332  0033                     STR_2:
   333  0033  3453               	retlw	83	;'S'
   334  0034  3474               	retlw	116	;'t'
   335  0035  346F               	retlw	111	;'o'
   336  0036  3470               	retlw	112	;'p'
   337  0037  343A               	retlw	58	;':'
   338  0038  3420               	retlw	32	;' '
   339  0039  3400               	retlw	0
   340  003A                     STR_5:
   341  003A  344F               	retlw	79	;'O'
   342  003B  3446               	retlw	70	;'F'
   343  003C  3446               	retlw	70	;'F'
   344  003D  3400               	retlw	0
   345  003E                     STR_4:
   346  003E  344F               	retlw	79	;'O'
   347  003F  344E               	retlw	78	;'N'
   348  0040  3400               	retlw	0
   349                           
   350                           	psect	cinit
   351  07E6                     start_initialization:	
   352                           ; #config settings
   353                           
   354  07E6                     __initialization:
   355                           
   356                           ; Initialize objects allocated to BANK0
   357  07E6  1383               	bcf	3,7	;select IRP bank0
   358  07E7  3066               	movlw	low (__pdataBANK0+11)
   359  07E8  00FD               	movwf	btemp+-1
   360  07E9  300E               	movlw	high __pidataBANK0
   361  07EA  00FE               	movwf	btemp
   362  07EB  3038               	movlw	low __pidataBANK0
   363  07EC  00FF               	movwf	btemp+1
   364  07ED  305B               	movlw	low __pdataBANK0
   365  07EE  0084               	movwf	4
   366  07EF  120A  158A  2663  120A  118A  	fcall	init_ram0
   367                           
   368                           ; Clear objects allocated to BANK0
   369  07F4  3043               	movlw	low __pbssBANK0
   370  07F5  0084               	movwf	4
   371  07F6  305B               	movlw	low (__pbssBANK0+24)
   372  07F7  120A  158A  2614  120A  118A  	fcall	clear_ram0
   373  07FC                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376  07FC                     __end_of__initialization:
   377  07FC  0183               	clrf	3
   378  07FD  120A  118A  2EAD   	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	bssBANK0
   381  0043                     __pbssBANK0:
   382  0043                     _alarm_val:
   383  0043                     	ds	8
   384  004B                     _sec:
   385  004B                     	ds	2
   386  004D                     _byte:
   387  004D                     	ds	1
   388  004E                     _hour_1:
   389  004E                     	ds	1
   390  004F                     _hour_0:
   391  004F                     	ds	1
   392  0050                     _min_1:
   393  0050                     	ds	1
   394  0051                     _min_0:
   395  0051                     	ds	1
   396  0052                     _sec_1:
   397  0052                     	ds	1
   398  0053                     _sec_0:
   399  0053                     	ds	1
   400  0054                     _alarm_m1:
   401  0054                     	ds	1
   402  0055                     _alarm_m0:
   403  0055                     	ds	1
   404  0056                     _alarm_h1:
   405  0056                     	ds	1
   406  0057                     _alarm_h0:
   407  0057                     	ds	1
   408  0058                     _jump:
   409  0058                     	ds	1
   410  0059                     _trigger_alarm:
   411  0059                     	ds	1
   412  005A                     _set_alarm:
   413  005A                     	ds	1
   414                           
   415                           	psect	dataBANK0
   416  005B                     __pdataBANK0:
   417  005B                     _year:
   418  005B                     	ds	2
   419  005D                     _month:
   420  005D                     	ds	2
   421  005F                     _day:
   422  005F                     	ds	2
   423  0061                     _hour:
   424  0061                     	ds	2
   425  0063                     _min:
   426  0063                     	ds	2
   427  0065                     _pos:
   428  0065                     	ds	1
   429                           
   430                           	psect	inittext
   431  0E5F                     init_fetch0:	
   432                           ;	Called with low address in FSR and high address in W
   433                           
   434  0E5F  087E               	movf	btemp,w
   435  0E60  008A               	movwf	10
   436  0E61  087F               	movf	btemp+1,w
   437  0E62  0082               	movwf	2
   438  0E63                     init_ram0:	
   439                           ;Called with:
   440                           ;	high address of idata address in btemp 
   441                           ;	low address of idata address in btemp+1 
   442                           ;	low address of data in FSR
   443                           ;	high address + 1 of data in btemp-1
   444                           
   445  0E63  120A  158A  265F  120A  158A  	fcall	init_fetch0
   446  0E68  0080               	movwf	0
   447  0E69  0A84               	incf	4,f
   448  0E6A  0804               	movf	4,w
   449  0E6B  067D               	xorwf	btemp+-1,w
   450  0E6C  1903               	btfsc	3,2
   451  0E6D  3400               	retlw	0
   452  0E6E  0AFF               	incf	btemp+1,f
   453  0E6F  1903               	btfsc	3,2
   454  0E70  0AFE               	incf	btemp,f
   455  0E71  2E63               	goto	init_ram0
   456                           
   457                           	psect	clrtext
   458  0E14                     clear_ram0:	
   459                           ;	Called with FSR containing the base address, and
   460                           ;	W with the last address+1
   461                           
   462  0E14  0064               	clrwdt	;clear the watchdog before getting into this loop
   463  0E15                     clrloop0:
   464  0E15  0180               	clrf	0	;clear RAM location pointed to by FSR
   465  0E16  0A84               	incf	4,f	;increment pointer
   466  0E17  0604               	xorwf	4,w	;XOR with final address
   467  0E18  1903               	btfsc	3,2	;have we reached the end yet?
   468  0E19  3400               	retlw	0	;all done for this memory range, return
   469  0E1A  0604               	xorwf	4,w	;XOR again to restore value
   470  0E1B  2E15               	goto	clrloop0	;do the next byte
   471                           
   472                           	psect	cstackCOMMON
   473  0070                     __pcstackCOMMON:
   474  0070                     ?_I2C_Hold:
   475  0070                     ??_I2C_Hold:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Begin:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_I2C_Begin:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_I2C_End:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ??_I2C_End:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_I2C_Write:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_Update_Current_Date_Time:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_lcd_data:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_lcd_data:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_lcd_cmd:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_lcd_cmd:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_lcd_init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd_SetBit:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_Lcd_SetBit:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_Lcd_Cmd:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_lcd_clear:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_Lcd_Print_Char:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_Lcd_Print_String:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_display_current_time:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_display_stop_time:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_display_relay_status:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_display_current_date:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_get_controls:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_main:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?___bmul:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_I2C_Read:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_get_adc:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0070                     ?___wmul:	
   557                           ; 2 bytes @ 0x0
   558                           
   559  0070                     ?___awdiv:	
   560                           ; 2 bytes @ 0x0
   561                           
   562  0070                     ?___awmod:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0070                     ?___lmul:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     Lcd_SetBit@data_bit:	
   569                           ; 4 bytes @ 0x0
   570                           
   571  0070                     ___bmul@multiplicand:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     I2C_Write@data:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     I2C_Read@ack:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ___wmul@multiplier:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ___awdiv@divisor:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ___awmod@divisor:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ___lmul@multiplier:	
   590                           ; 2 bytes @ 0x0
   591                           
   592                           
   593                           ; 4 bytes @ 0x0
   594  0070                     	ds	1
   595  0071                     ??_Lcd_Cmd:
   596  0071                     ??_Lcd_Print_Char:	
   597                           ; 1 bytes @ 0x1
   598                           
   599  0071                     ??___bmul:	
   600                           ; 1 bytes @ 0x1
   601                           
   602                           
   603                           ; 1 bytes @ 0x1
   604  0071                     	ds	1
   605  0072                     ??_I2C_Write:
   606  0072                     ??_I2C_Read:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0072                     ??_get_adc:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     lcd_data@data:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     lcd_cmd@cmd:	
   616                           ; 1 bytes @ 0x2
   617                           
   618  0072                     ___bmul@product:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     ___wmul@multiplicand:	
   622                           ; 1 bytes @ 0x2
   623                           
   624  0072                     ___awdiv@dividend:	
   625                           ; 2 bytes @ 0x2
   626                           
   627  0072                     ___awmod@dividend:	
   628                           ; 2 bytes @ 0x2
   629                           
   630                           
   631                           ; 2 bytes @ 0x2
   632  0072                     	ds	1
   633  0073                     ??_lcd_init:
   634  0073                     ??_lcd_clear:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     Lcd_Cmd@a:	
   638                           ; 1 bytes @ 0x3
   639                           
   640  0073                     ___bmul@multiplier:	
   641                           ; 1 bytes @ 0x3
   642                           
   643                           
   644                           ; 1 bytes @ 0x3
   645  0073                     	ds	1
   646  0074                     ?_Lcd_Set_Cursor:
   647  0074                     ??___wmul:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___awdiv:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ??___awmod:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     Lcd_Set_Cursor@b:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     Lcd_Print_Char@Lower_Nibble:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     I2C_Read@incoming:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     get_adc@ADC_Results:	
   666                           ; 2 bytes @ 0x4
   667                           
   668  0074                     ___wmul@product:	
   669                           ; 2 bytes @ 0x4
   670                           
   671  0074                     ___lmul@multiplicand:	
   672                           ; 2 bytes @ 0x4
   673                           
   674                           
   675                           ; 4 bytes @ 0x4
   676  0074                     	ds	1
   677  0075                     ??_Lcd_Set_Cursor:
   678  0075                     Lcd_Print_Char@Upper_Nibble:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     ___awdiv@counter:	
   682                           ; 1 bytes @ 0x5
   683                           
   684  0075                     ___awmod@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687                           
   688                           ; 1 bytes @ 0x5
   689  0075                     	ds	1
   690  0076                     ?_BCD_2_DEC:
   691  0076                     Lcd_Print_Char@data:	
   692                           ; 2 bytes @ 0x6
   693                           
   694  0076                     ___awdiv@sign:	
   695                           ; 1 bytes @ 0x6
   696                           
   697  0076                     ___awmod@sign:	
   698                           ; 1 bytes @ 0x6
   699                           
   700  0076                     BCD_2_DEC@to_convert:	
   701                           ; 1 bytes @ 0x6
   702                           
   703                           
   704                           ; 2 bytes @ 0x6
   705  0076                     	ds	1
   706  0077                     ??_Lcd_Print_String:
   707  0077                     Lcd_Set_Cursor@a:	
   708                           ; 1 bytes @ 0x7
   709                           
   710  0077                     Lcd_Print_String@i:	
   711                           ; 1 bytes @ 0x7
   712                           
   713  0077                     ___awdiv@quotient:	
   714                           ; 2 bytes @ 0x7
   715                           
   716                           
   717                           ; 2 bytes @ 0x7
   718  0077                     	ds	1
   719  0078                     ??_BCD_2_DEC:
   720  0078                     ??___lmul:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0078                     Lcd_Set_Cursor@z:	
   724                           ; 1 bytes @ 0x8
   725                           
   726                           
   727                           ; 1 bytes @ 0x8
   728  0078                     	ds	1
   729  0079                     Lcd_Set_Cursor@y:
   730  0079                     Lcd_Print_String@a:	
   731                           ; 1 bytes @ 0x9
   732                           
   733  0079                     ___lmul@product:	
   734                           ; 1 bytes @ 0x9
   735                           
   736                           
   737                           ; 4 bytes @ 0x9
   738  0079                     	ds	1
   739  007A                     ??_Update_Current_Date_Time:
   740  007A                     Lcd_Set_Cursor@temp:	
   741                           ; 1 bytes @ 0xA
   742                           
   743                           
   744                           ; 1 bytes @ 0xA
   745  007A                     	ds	1
   746  007B                     ??_display_current_time:
   747  007B                     ??_display_stop_time:	
   748                           ; 1 bytes @ 0xB
   749                           
   750  007B                     ??_display_relay_status:	
   751                           ; 1 bytes @ 0xB
   752                           
   753  007B                     ??_display_current_date:	
   754                           ; 1 bytes @ 0xB
   755                           
   756  007B                     ??_get_controls:	
   757                           ; 1 bytes @ 0xB
   758                           
   759                           
   760                           ; 1 bytes @ 0xB
   761  007B                     	ds	2
   762  007D                     ??___lldiv:
   763                           
   764                           ; 1 bytes @ 0xD
   765  007D                     	ds	1
   766                           
   767                           	psect	cstackBANK0
   768  0020                     __pcstackBANK0:
   769  0020                     ?___lldiv:
   770  0020                     display_current_date@year_0:	
   771                           ; 4 bytes @ 0x0
   772                           
   773  0020                     ___lldiv@divisor:	
   774                           ; 1 bytes @ 0x0
   775                           
   776                           
   777                           ; 4 bytes @ 0x0
   778  0020                     	ds	1
   779  0021                     display_current_date@year_1:
   780                           
   781                           ; 1 bytes @ 0x1
   782  0021                     	ds	1
   783  0022                     display_current_date@month_0:
   784                           
   785                           ; 1 bytes @ 0x2
   786  0022                     	ds	1
   787  0023                     display_current_date@month_1:
   788                           
   789                           ; 1 bytes @ 0x3
   790  0023                     	ds	1
   791  0024                     display_current_date@day_0:
   792  0024                     ___lldiv@dividend:	
   793                           ; 1 bytes @ 0x4
   794                           
   795                           
   796                           ; 4 bytes @ 0x4
   797  0024                     	ds	1
   798  0025                     display_current_date@day_1:
   799                           
   800                           ; 1 bytes @ 0x5
   801  0025                     	ds	3
   802  0028                     ___lldiv@quotient:
   803                           
   804                           ; 4 bytes @ 0x8
   805  0028                     	ds	4
   806  002C                     ___lldiv@counter:
   807                           
   808                           ; 1 bytes @ 0xC
   809  002C                     	ds	1
   810  002D                     ?_I2C_Initialize:
   811  002D                     I2C_Initialize@feq_K:	
   812                           ; 1 bytes @ 0xD
   813                           
   814                           
   815                           ; 4 bytes @ 0xD
   816  002D                     	ds	4
   817  0031                     ??_I2C_Initialize:
   818                           
   819                           ; 1 bytes @ 0x11
   820  0031                     	ds	4
   821  0035                     ??_main:
   822                           
   823                           ; 1 bytes @ 0x15
   824  0035                     	ds	3
   825  0038                     main@newDigits:
   826                           
   827                           ; 4 bytes @ 0x18
   828  0038                     	ds	4
   829  003C                     main@Digits:
   830                           
   831                           ; 4 bytes @ 0x1C
   832  003C                     	ds	4
   833  0040                     main@i:
   834                           
   835                           ; 2 bytes @ 0x20
   836  0040                     	ds	2
   837  0042                     main@value:
   838                           
   839                           ; 1 bytes @ 0x22
   840  0042                     	ds	1
   841                           
   842                           	psect	maintext
   843  06AD                     __pmaintext:	
   844 ;;
   845 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   846 ;;
   847 ;; *************** function _main *****************
   848 ;; Defined at:
   849 ;;		line 394 in file "main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  i               2   32[BANK0 ] int 
   854 ;;  Digits          4   28[BANK0 ] unsigned char [4]
   855 ;;  newDigits       4   24[BANK0 ] unsigned char [4]
   856 ;;  value           1   34[BANK0 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : B00/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       0       0       0       0
   867 ;;      Locals:         0      11       0       0       0
   868 ;;      Temps:          0       3       0       0       0
   869 ;;      Totals:         0      14       0       0       0
   870 ;;Total ram usage:       14 bytes
   871 ;; Hardware stack levels required when called: 4
   872 ;; This function calls:
   873 ;;		_I2C_Initialize
   874 ;;		_Lcd_Print_String
   875 ;;		_Lcd_Set_Cursor
   876 ;;		_Update_Current_Date_Time
   877 ;;		___awdiv
   878 ;;		___awmod
   879 ;;		___bmul
   880 ;;		_display_current_date
   881 ;;		_display_current_time
   882 ;;		_display_relay_status
   883 ;;		_display_stop_time
   884 ;;		_get_adc
   885 ;;		_get_controls
   886 ;;		_lcd_clear
   887 ;;		_lcd_data
   888 ;;		_lcd_init
   889 ;; This function is called by:
   890 ;;		Startup code after reset
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894  06AD                     _main:	
   895                           ;psect for function _main
   896                           
   897  06AD                     l2023:	
   898                           ;incstack = 0
   899                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   900                           
   901  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   902  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   903  06AF  1007               	bcf	7,0	;volatile
   904  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   905  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   906  06B2  1407               	bsf	7,0	;volatile
   907  06B3                     l2025:
   908  06B3  1683               	bsf	3,5	;RP0=1, select bank1
   909  06B4  1303               	bcf	3,6	;RP1=0, select bank1
   910  06B5  0188               	clrf	8	;volatile
   911  06B6                     l2027:
   912  06B6  30FF               	movlw	255
   913  06B7  0086               	movwf	6	;volatile
   914  06B8                     l2029:
   915  06B8  0181               	clrf	1	;volatile
   916  06B9                     l2031:
   917  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   918  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   919  06BB  1188               	bcf	8,3	;volatile
   920  06BC                     l2033:
   921  06BC  120A  158A  26A1  120A  118A  	fcall	_lcd_init
   922  06C1                     l2035:
   923  06C1  3000               	movlw	0
   924  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   925  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   926  06C4  00B0               	movwf	I2C_Initialize@feq_K+3
   927  06C5  3000               	movlw	0
   928  06C6  00AF               	movwf	I2C_Initialize@feq_K+2
   929  06C7  3000               	movlw	0
   930  06C8  00AE               	movwf	I2C_Initialize@feq_K+1
   931  06C9  3064               	movlw	100
   932  06CA  00AD               	movwf	I2C_Initialize@feq_K
   933  06CB  120A  118A  20D7  120A  118A  	fcall	_I2C_Initialize
   934  06D0                     l2037:
   935  06D0  3006               	movlw	6
   936  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   937  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   938  06D3  00B5               	movwf	??_main
   939  06D4  0835               	movf	??_main,w
   940  06D5  00F4               	movwf	Lcd_Set_Cursor@b
   941  06D6  3002               	movlw	2
   942  06D7  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
   943  06DC                     l2039:
   944  06DC  3010               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   945  06DD  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
   946  06E2                     l2041:
   947  06E2  3007               	movlw	7
   948  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   949  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   950  06E5  00B5               	movwf	??_main
   951  06E6  0835               	movf	??_main,w
   952  06E7  00F4               	movwf	Lcd_Set_Cursor@b
   953  06E8  3003               	movlw	3
   954  06E9  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
   955  06EE                     l2043:
   956  06EE  301B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   957  06EF  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
   958  06F4  3027               	movlw	39
   959  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   960  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   961  06F7  00B7               	movwf	??_main+2
   962  06F8  300D               	movlw	13
   963  06F9  00B6               	movwf	??_main+1
   964  06FA  3025               	movlw	37
   965  06FB  00B5               	movwf	??_main
   966  06FC                     u1687:
   967  06FC  0BB5               	decfsz	??_main,f
   968  06FD  2EFC               	goto	u1687
   969  06FE  0BB6               	decfsz	??_main+1,f
   970  06FF  2EFC               	goto	u1687
   971  0700  0BB7               	decfsz	??_main+2,f
   972  0701  2EFC               	goto	u1687
   973  0702  2F03               	nop2
   974  0703                     l2045:
   975  0703  120A  118A  2041  120A  118A  	fcall	_lcd_clear
   976  0708                     l2047:
   977                           
   978                           ;main.c: 428:          Update_Current_Date_Time();
   979  0708  120A  118A  24D5  120A  118A  	fcall	_Update_Current_Date_Time
   980  070D                     l2049:
   981                           
   982                           ;main.c: 429:          display_current_date();
   983  070D  120A  118A  234F  120A  118A  	fcall	_display_current_date
   984  0712                     l2051:
   985                           
   986                           ;main.c: 430:          display_current_time();
   987  0712  120A  118A  2410  120A  118A  	fcall	_display_current_time
   988  0717                     l2053:
   989                           
   990                           ;main.c: 431:          display_stop_time();
   991  0717  120A  118A  212A  120A  118A  	fcall	_display_stop_time
   992  071C                     l2055:
   993                           
   994                           ;main.c: 432:          display_relay_status();
   995  071C  120A  158A  2650  120A  118A  	fcall	_display_relay_status
   996  0721                     l2057:
   997                           
   998                           ;main.c: 433:          get_controls();
   999  0721  120A  118A  25B9  120A  118A  	fcall	_get_controls
  1000  0726                     l2059:
  1001                           
  1002                           ;main.c: 435:           ADCON0bits.GO =1;
  1003  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0728  151F               	bsf	31,2	;volatile
  1006  0729                     l2061:
  1007                           
  1008                           ;main.c: 437:          unsigned char value = get_adc();
  1009  0729  120A  158A  26C0  120A  118A  	fcall	_get_adc
  1010  072E  0870               	movf	?_get_adc,w
  1011  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0731  00B5               	movwf	??_main
  1014  0732  0835               	movf	??_main,w
  1015  0733  00C2               	movwf	main@value
  1016  0734                     l2063:
  1017                           
  1018                           ;main.c: 438:          unsigned char Digits[4];;main.c: 439:          unsigned char newD
      +                          igits[4];;main.c: 442:          Digits[0] = value/1000;
  1019  0734  30E8               	movlw	232
  1020  0735  00F0               	movwf	___awdiv@divisor
  1021  0736  3003               	movlw	3
  1022  0737  00F1               	movwf	___awdiv@divisor+1
  1023  0738  0842               	movf	main@value,w
  1024  0739  00B5               	movwf	??_main
  1025  073A  01B6               	clrf	??_main+1
  1026  073B  0835               	movf	??_main,w
  1027  073C  00F2               	movwf	___awdiv@dividend
  1028  073D  0836               	movf	??_main+1,w
  1029  073E  00F3               	movwf	___awdiv@dividend+1
  1030  073F  120A  118A  21DB  120A  118A  	fcall	___awdiv
  1031  0744  0870               	movf	?___awdiv,w
  1032  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0747  00B7               	movwf	??_main+2
  1035  0748  0837               	movf	??_main+2,w
  1036  0749  00BC               	movwf	main@Digits
  1037  074A                     l2065:
  1038                           
  1039                           ;main.c: 443:          value = value - Digits[0]*1000;
  1040  074A  3018               	movlw	24
  1041  074B  00B5               	movwf	??_main
  1042  074C  0835               	movf	??_main,w
  1043  074D  00F0               	movwf	___bmul@multiplicand
  1044  074E  083C               	movf	main@Digits,w
  1045  074F  120A  158A  2672  120A  118A  	fcall	___bmul
  1046  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0756  0742               	addwf	main@value,w
  1049  0757  00B6               	movwf	??_main+1
  1050  0758  0836               	movf	??_main+1,w
  1051  0759  00C2               	movwf	main@value
  1052  075A                     l2067:
  1053                           
  1054                           ;main.c: 444:          Digits[1] = value/100;
  1055  075A  3064               	movlw	100
  1056  075B  00F0               	movwf	___awdiv@divisor
  1057  075C  3000               	movlw	0
  1058  075D  00F1               	movwf	___awdiv@divisor+1
  1059  075E  0842               	movf	main@value,w
  1060  075F  00B5               	movwf	??_main
  1061  0760  01B6               	clrf	??_main+1
  1062  0761  0835               	movf	??_main,w
  1063  0762  00F2               	movwf	___awdiv@dividend
  1064  0763  0836               	movf	??_main+1,w
  1065  0764  00F3               	movwf	___awdiv@dividend+1
  1066  0765  120A  118A  21DB  120A  118A  	fcall	___awdiv
  1067  076A  0870               	movf	?___awdiv,w
  1068  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1069  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1070  076D  00B7               	movwf	??_main+2
  1071  076E  0837               	movf	??_main+2,w
  1072  076F  00BD               	movwf	main@Digits+1
  1073  0770                     l2069:
  1074                           
  1075                           ;main.c: 445:          value = value - Digits[1]*100;
  1076  0770  309C               	movlw	156
  1077  0771  00B5               	movwf	??_main
  1078  0772  0835               	movf	??_main,w
  1079  0773  00F0               	movwf	___bmul@multiplicand
  1080  0774  083D               	movf	main@Digits+1,w
  1081  0775  120A  158A  2672  120A  118A  	fcall	___bmul
  1082  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1083  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1084  077C  0742               	addwf	main@value,w
  1085  077D  00B6               	movwf	??_main+1
  1086  077E  0836               	movf	??_main+1,w
  1087  077F  00C2               	movwf	main@value
  1088  0780                     l2071:
  1089                           
  1090                           ;main.c: 446:          Digits[2] = value/10;
  1091  0780  300A               	movlw	10
  1092  0781  00F0               	movwf	___awdiv@divisor
  1093  0782  3000               	movlw	0
  1094  0783  00F1               	movwf	___awdiv@divisor+1
  1095  0784  0842               	movf	main@value,w
  1096  0785  00B5               	movwf	??_main
  1097  0786  01B6               	clrf	??_main+1
  1098  0787  0835               	movf	??_main,w
  1099  0788  00F2               	movwf	___awdiv@dividend
  1100  0789  0836               	movf	??_main+1,w
  1101  078A  00F3               	movwf	___awdiv@dividend+1
  1102  078B  120A  118A  21DB  120A  118A  	fcall	___awdiv
  1103  0790  0870               	movf	?___awdiv,w
  1104  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0793  00B7               	movwf	??_main+2
  1107  0794  0837               	movf	??_main+2,w
  1108  0795  00BE               	movwf	main@Digits+2
  1109  0796                     l2073:
  1110                           
  1111                           ;main.c: 447:          Digits[3] = value%10;
  1112  0796  300A               	movlw	10
  1113  0797  00F0               	movwf	___awmod@divisor
  1114  0798  3000               	movlw	0
  1115  0799  00F1               	movwf	___awmod@divisor+1
  1116  079A  0842               	movf	main@value,w
  1117  079B  00B5               	movwf	??_main
  1118  079C  01B6               	clrf	??_main+1
  1119  079D  0835               	movf	??_main,w
  1120  079E  00F2               	movwf	___awmod@dividend
  1121  079F  0836               	movf	??_main+1,w
  1122  07A0  00F3               	movwf	___awmod@dividend+1
  1123  07A1  120A  118A  2182  120A  118A  	fcall	___awmod
  1124  07A6  0870               	movf	?___awmod,w
  1125  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1126  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1127  07A9  00B7               	movwf	??_main+2
  1128  07AA  0837               	movf	??_main+2,w
  1129  07AB  00BF               	movwf	main@Digits+3
  1130  07AC                     l2075:
  1131                           
  1132                           ;main.c: 448:          Lcd_Set_Cursor(1,1);
  1133  07AC  01F4               	clrf	Lcd_Set_Cursor@b
  1134  07AD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1135  07AE  3001               	movlw	1
  1136  07AF  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1137  07B4                     l2077:
  1138                           
  1139                           ;main.c: 449:          for(int i=0;i<=4;i++){
  1140  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1141  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1142  07B6  01C0               	clrf	main@i
  1143  07B7  01C1               	clrf	main@i+1
  1144  07B8                     l2083:
  1145                           
  1146                           ;main.c: 450:              newDigits[i]=(Digits[i]+48);
  1147  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1148  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1149  07BA  0840               	movf	main@i,w
  1150  07BB  3E3C               	addlw	(low (main@Digits| 0))& (0+255)
  1151  07BC  0084               	movwf	4
  1152  07BD  1383               	bcf	3,7	;select IRP bank0
  1153  07BE  0800               	movf	0,w
  1154  07BF  3E30               	addlw	48
  1155  07C0  00B5               	movwf	??_main
  1156  07C1  0840               	movf	main@i,w
  1157  07C2  3E38               	addlw	(low (main@newDigits| 0))& (0+255)
  1158  07C3  0084               	movwf	4
  1159  07C4  0835               	movf	??_main,w
  1160  07C5  0080               	movwf	0
  1161  07C6                     l2085:
  1162                           
  1163                           ;main.c: 451:          }
  1164  07C6  3001               	movlw	1
  1165  07C7  07C0               	addwf	main@i,f
  1166  07C8  1803               	skipnc
  1167  07C9  0AC1               	incf	main@i+1,f
  1168  07CA  3000               	movlw	0
  1169  07CB  07C1               	addwf	main@i+1,f
  1170  07CC                     l2087:
  1171  07CC  0841               	movf	main@i+1,w
  1172  07CD  3A80               	xorlw	128
  1173  07CE  00FF               	movwf	btemp+1
  1174  07CF  3080               	movlw	128
  1175  07D0  027F               	subwf	btemp+1,w
  1176  07D1  1D03               	skipz
  1177  07D2  2FD5               	goto	u1675
  1178  07D3  3005               	movlw	5
  1179  07D4  0240               	subwf	main@i,w
  1180  07D5                     u1675:
  1181  07D5  1C03               	skipc
  1182  07D6  2FD8               	goto	u1671
  1183  07D7  2FD9               	goto	u1670
  1184  07D8                     u1671:
  1185  07D8  2FB8               	goto	l2083
  1186  07D9                     u1670:
  1187  07D9                     l2089:
  1188                           
  1189                           ;main.c: 452:          lcd_data(Digits[0]+48);
  1190  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1191  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1192  07DB  083C               	movf	main@Digits,w
  1193  07DC  3E30               	addlw	48
  1194  07DD  120A  158A  27CF  120A  118A  	fcall	_lcd_data
  1195  07E2  2F08               	goto	l2047
  1196  07E3  120A  118A  2800   	ljmp	start
  1197  07E6                     __end_of_main:
  1198                           
  1199                           	psect	text1
  1200  0EA1                     __ptext1:	
  1201 ;; *************** function _lcd_init *****************
  1202 ;; Defined at:
  1203 ;;		line 119 in file "main.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 1
  1224 ;; This function calls:
  1225 ;;		_lcd_cmd
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231  0EA1                     _lcd_init:	
  1232                           ;psect for function _lcd_init
  1233                           
  1234  0EA1                     l1823:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1237                           
  1238                           
  1239                           ;main.c: 120:         Lcd_Cmd(z);
  1240  0EA1  3002               	movlw	2
  1241  0EA2  120A  158A  279E  120A  158A  	fcall	_lcd_cmd
  1242                           
  1243                           ;main.c: 121:         Lcd_Cmd(y);
  1244  0EA7  3028               	movlw	40
  1245  0EA8  120A  158A  279E  120A  158A  	fcall	_lcd_cmd
  1246                           
  1247                           ;main.c: 122:     }
  1248  0EAD  300C               	movlw	12
  1249  0EAE  120A  158A  279E  120A  158A  	fcall	_lcd_cmd
  1250                           
  1251                           ;main.c: 123: 
  1252  0EB3  3006               	movlw	6
  1253  0EB4  120A  158A  279E  120A  158A  	fcall	_lcd_cmd
  1254                           
  1255                           ;main.c: 124: }
  1256  0EB9  3001               	movlw	1
  1257  0EBA  120A  158A  279E  120A  158A  	fcall	_lcd_cmd
  1258  0EBF                     l181:
  1259  0EBF  0008               	return
  1260  0EC0                     __end_of_lcd_init:
  1261                           
  1262                           	psect	text2
  1263  0FCF                     __ptext2:	
  1264 ;; *************** function _lcd_data *****************
  1265 ;; Defined at:
  1266 ;;		line 71 in file "main.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  data            1    wreg     unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  data            1    2[COMMON] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0
  1282 ;;      Temps:          2       0       0       0       0
  1283 ;;      Totals:         3       0       0       0       0
  1284 ;;Total ram usage:        3 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;;		_lcd_string
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294  0FCF                     _lcd_data:	
  1295                           ;psect for function _lcd_data
  1296                           
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1300                           ;lcd_data@data stored from wreg
  1301  0FCF  00F2               	movwf	lcd_data@data
  1302  0FD0                     l1799:
  1303                           
  1304                           ;main.c: 72:     else
  1305  0FD0  0872               	movf	lcd_data@data,w
  1306  0FD1  39F0               	andlw	240
  1307  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0FD4  0088               	movwf	8	;volatile
  1310  0FD5                     l1801:
  1311                           
  1312                           ;main.c: 73:         RD6 = 0;
  1313  0FD5  1408               	bsf	8,0	;volatile
  1314  0FD6                     l1803:
  1315                           
  1316                           ;main.c: 74: 
  1317  0FD6  1088               	bcf	8,1	;volatile
  1318  0FD7                     l1805:
  1319                           
  1320                           ;main.c: 75:     if(data_bit& 8)
  1321  0FD7  1508               	bsf	8,2	;volatile
  1322  0FD8                     l1807:
  1323                           
  1324                           ;main.c: 76:         RD7 = 1;
  1325  0FD8  3021               	movlw	33
  1326  0FD9  00F1               	movwf	??_lcd_data+1
  1327  0FDA  3076               	movlw	118
  1328  0FDB  00F0               	movwf	??_lcd_data
  1329  0FDC                     u1697:
  1330  0FDC  0BF0               	decfsz	??_lcd_data,f
  1331  0FDD  2FDC               	goto	u1697
  1332  0FDE  0BF1               	decfsz	??_lcd_data+1,f
  1333  0FDF  2FDC               	goto	u1697
  1334  0FE0  0000               	nop
  1335  0FE1                     l1809:
  1336                           
  1337                           ;main.c: 77:     else
  1338  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0FE3  1108               	bcf	8,2	;volatile
  1341  0FE4                     l1811:
  1342                           
  1343                           ;main.c: 79: }
  1344  0FE4  0872               	movf	lcd_data@data,w
  1345  0FE5  00F0               	movwf	??_lcd_data
  1346  0FE6  3003               	movlw	3
  1347  0FE7                     u1405:
  1348  0FE7  1003               	clrc
  1349  0FE8  0DF0               	rlf	??_lcd_data,f
  1350  0FE9  3EFF               	addlw	-1
  1351  0FEA  1D03               	skipz
  1352  0FEB  2FE7               	goto	u1405
  1353  0FEC  1003               	clrc
  1354  0FED  0D70               	rlf	??_lcd_data,w
  1355  0FEE  39F0               	andlw	240
  1356  0FEF  0088               	movwf	8	;volatile
  1357  0FF0                     l1813:
  1358                           
  1359                           ;main.c: 80: 
  1360  0FF0  1408               	bsf	8,0	;volatile
  1361  0FF1                     l1815:
  1362                           
  1363                           ;main.c: 81: void Lcd_Cmd(char a)
  1364  0FF1  1088               	bcf	8,1	;volatile
  1365  0FF2                     l1817:
  1366                           
  1367                           ;main.c: 82: {
  1368  0FF2  1508               	bsf	8,2	;volatile
  1369  0FF3                     l1819:
  1370                           
  1371                           ;main.c: 83:     RD0 = 0;
  1372  0FF3  3021               	movlw	33
  1373  0FF4  00F1               	movwf	??_lcd_data+1
  1374  0FF5  3076               	movlw	118
  1375  0FF6  00F0               	movwf	??_lcd_data
  1376  0FF7                     u1707:
  1377  0FF7  0BF0               	decfsz	??_lcd_data,f
  1378  0FF8  2FF7               	goto	u1707
  1379  0FF9  0BF1               	decfsz	??_lcd_data+1,f
  1380  0FFA  2FF7               	goto	u1707
  1381  0FFB  0000               	nop
  1382  0FFC                     l1821:
  1383                           
  1384                           ;main.c: 84:     Lcd_SetBit(a);
  1385  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0FFE  1108               	bcf	8,2	;volatile
  1388  0FFF                     l166:
  1389  0FFF  0008               	return
  1390  1000                     __end_of_lcd_data:
  1391                           
  1392                           	psect	text3
  1393  0041                     __ptext3:	
  1394 ;; *************** function _lcd_clear *****************
  1395 ;; Defined at:
  1396 ;;		line 213 in file "main.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 1
  1417 ;; This function calls:
  1418 ;;		_lcd_cmd
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424  0041                     _lcd_clear:	
  1425                           ;psect for function _lcd_clear
  1426                           
  1427  0041                     l1825:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1430                           
  1431                           
  1432                           ;main.c: 214:         Lcd_Print_String("Stop: ");
  1433  0041  3001               	movlw	1
  1434  0042  120A  158A  279E  120A  118A  	fcall	_lcd_cmd
  1435  0047                     l213:
  1436  0047  0008               	return
  1437  0048                     __end_of_lcd_clear:
  1438                           
  1439                           	psect	text4
  1440  0F9E                     __ptext4:	
  1441 ;; *************** function _lcd_cmd *****************
  1442 ;; Defined at:
  1443 ;;		line 87 in file "main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  cmd             1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  cmd             1    2[COMMON] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         1       0       0       0       0
  1459 ;;      Temps:          2       0       0       0       0
  1460 ;;      Totals:         3       0       0       0       0
  1461 ;;Total ram usage:        3 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_lcd_init
  1467 ;;		_lcd_clear
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471  0F9E                     _lcd_cmd:	
  1472                           ;psect for function _lcd_cmd
  1473                           
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1477                           ;lcd_cmd@cmd stored from wreg
  1478  0F9E  00F2               	movwf	lcd_cmd@cmd
  1479  0F9F                     l1591:
  1480                           
  1481                           ;main.c: 88: }
  1482  0F9F  0872               	movf	lcd_cmd@cmd,w
  1483  0FA0  39F0               	andlw	240
  1484  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0FA3  0088               	movwf	8	;volatile
  1487  0FA4                     l1593:
  1488                           
  1489                           ;main.c: 89: 
  1490  0FA4  1008               	bcf	8,0	;volatile
  1491  0FA5                     l1595:
  1492                           
  1493                           ;main.c: 90: void Lcd_Set_Cursor(char a, char b)
  1494  0FA5  1088               	bcf	8,1	;volatile
  1495  0FA6                     l1597:
  1496                           
  1497                           ;main.c: 91: {
  1498  0FA6  1508               	bsf	8,2	;volatile
  1499  0FA7                     l1599:
  1500                           
  1501                           ;main.c: 92:     char temp,z,y;
  1502  0FA7  3021               	movlw	33
  1503  0FA8  00F1               	movwf	??_lcd_cmd+1
  1504  0FA9  3076               	movlw	118
  1505  0FAA  00F0               	movwf	??_lcd_cmd
  1506  0FAB                     u1717:
  1507  0FAB  0BF0               	decfsz	??_lcd_cmd,f
  1508  0FAC  2FAB               	goto	u1717
  1509  0FAD  0BF1               	decfsz	??_lcd_cmd+1,f
  1510  0FAE  2FAB               	goto	u1717
  1511  0FAF  0000               	nop
  1512  0FB0                     l1601:
  1513                           
  1514                           ;main.c: 93:     if(a== 1)
  1515  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0FB2  1108               	bcf	8,2	;volatile
  1518  0FB3                     l1603:
  1519                           
  1520                           ;main.c: 95:       temp = 0x80 + b - 1;
  1521  0FB3  0872               	movf	lcd_cmd@cmd,w
  1522  0FB4  00F0               	movwf	??_lcd_cmd
  1523  0FB5  3003               	movlw	3
  1524  0FB6                     u985:
  1525  0FB6  1003               	clrc
  1526  0FB7  0DF0               	rlf	??_lcd_cmd,f
  1527  0FB8  3EFF               	addlw	-1
  1528  0FB9  1D03               	skipz
  1529  0FBA  2FB6               	goto	u985
  1530  0FBB  1003               	clrc
  1531  0FBC  0D70               	rlf	??_lcd_cmd,w
  1532  0FBD  39F0               	andlw	240
  1533  0FBE  0088               	movwf	8	;volatile
  1534  0FBF                     l1605:
  1535                           
  1536                           ;main.c: 96:         z = temp>>4;
  1537  0FBF  1008               	bcf	8,0	;volatile
  1538  0FC0                     l1607:
  1539                           
  1540                           ;main.c: 97:         y = temp & 0x0F;
  1541  0FC0  1088               	bcf	8,1	;volatile
  1542  0FC1                     l1609:
  1543                           
  1544                           ;main.c: 98:         Lcd_Cmd(z);
  1545  0FC1  1508               	bsf	8,2	;volatile
  1546  0FC2                     l1611:
  1547                           
  1548                           ;main.c: 99:         Lcd_Cmd(y);
  1549  0FC2  3021               	movlw	33
  1550  0FC3  00F1               	movwf	??_lcd_cmd+1
  1551  0FC4  3076               	movlw	118
  1552  0FC5  00F0               	movwf	??_lcd_cmd
  1553  0FC6                     u1727:
  1554  0FC6  0BF0               	decfsz	??_lcd_cmd,f
  1555  0FC7  2FC6               	goto	u1727
  1556  0FC8  0BF1               	decfsz	??_lcd_cmd+1,f
  1557  0FC9  2FC6               	goto	u1727
  1558  0FCA  0000               	nop
  1559  0FCB                     l1613:
  1560                           
  1561                           ;main.c: 100:     }
  1562  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0FCD  1108               	bcf	8,2	;volatile
  1565  0FCE                     l169:
  1566  0FCE  0008               	return
  1567  0FCF                     __end_of_lcd_cmd:
  1568                           
  1569                           	psect	text5
  1570  05B9                     __ptext5:	
  1571 ;; *************** function _get_controls *****************
  1572 ;; Defined at:
  1573 ;;		line 319 in file "main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0
  1589 ;;      Temps:          3       0       0       0       0
  1590 ;;      Totals:         3       0       0       0       0
  1591 ;;Total ram usage:        3 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 3
  1594 ;; This function calls:
  1595 ;;		_Lcd_Print_Char
  1596 ;;		_Lcd_Print_String
  1597 ;;		_Lcd_Set_Cursor
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603  05B9                     _get_controls:	
  1604                           ;psect for function _get_controls
  1605                           
  1606  05B9                     l1875:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _get_controls: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1609                           
  1610                           
  1611                           ;main.c: 322:     return ADC_Results;
  1612  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1613  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1614  05BB  1886               	btfsc	6,1	;volatile
  1615  05BC  2DBE               	goto	u1411
  1616  05BD  2DBF               	goto	u1410
  1617  05BE                     u1411:
  1618  05BE  2DCA               	goto	l246
  1619  05BF                     u1410:
  1620  05BF                     l1877:
  1621  05BF  085A               	movf	_set_alarm,w
  1622  05C0  1D03               	btfss	3,2
  1623  05C1  2DC3               	goto	u1421
  1624  05C2  2DC4               	goto	u1420
  1625  05C3                     u1421:
  1626  05C3  2DCA               	goto	l246
  1627  05C4                     u1420:
  1628  05C4                     l247:
  1629  05C4  1C86               	btfss	6,1	;volatile
  1630  05C5  2DC7               	goto	u1431
  1631  05C6  2DC8               	goto	u1430
  1632  05C7                     u1431:
  1633  05C7  2DC4               	goto	l247
  1634  05C8                     u1430:
  1635  05C8                     l249:
  1636                           
  1637                           ;main.c: 324: 
  1638  05C8  01DA               	clrf	_set_alarm
  1639  05C9  0ADA               	incf	_set_alarm,f
  1640  05CA                     l246:	
  1641                           ;main.c: 325: void main(void){
  1642                           
  1643                           
  1644                           ;main.c: 326: 
  1645  05CA  1886               	btfsc	6,1	;volatile
  1646  05CB  2DCD               	goto	u1441
  1647  05CC  2DCE               	goto	u1440
  1648  05CD                     u1441:
  1649  05CD  2DD8               	goto	l1887
  1650  05CE                     u1440:
  1651  05CE                     l1881:
  1652  05CE  035A               	decf	_set_alarm,w
  1653  05CF  1D03               	btfss	3,2
  1654  05D0  2DD2               	goto	u1451
  1655  05D1  2DD3               	goto	u1450
  1656  05D2                     u1451:
  1657  05D2  2DD8               	goto	l1887
  1658  05D3                     u1450:
  1659  05D3                     l251:
  1660  05D3  1C86               	btfss	6,1	;volatile
  1661  05D4  2DD6               	goto	u1461
  1662  05D5  2DD7               	goto	u1460
  1663  05D6                     u1461:
  1664  05D6  2DD3               	goto	l251
  1665  05D7                     u1460:
  1666  05D7                     l1885:
  1667                           
  1668                           ;main.c: 328:     PORTCbits.RC0 = 1;
  1669  05D7  01DA               	clrf	_set_alarm
  1670  05D8                     l1887:
  1671                           
  1672                           ;main.c: 333:     lcd_init();
  1673  05D8  035A               	decf	_set_alarm,w
  1674  05D9  1D03               	btfss	3,2
  1675  05DA  2DDC               	goto	u1471
  1676  05DB  2DDD               	goto	u1470
  1677  05DC                     u1471:
  1678  05DC  2E3A               	goto	l1923
  1679  05DD                     u1470:
  1680  05DD                     l1889:
  1681                           
  1682                           ;main.c: 334: 
  1683  05DD  1806               	btfsc	6,0	;volatile
  1684  05DE  2DE0               	goto	u1481
  1685  05DF  2DE1               	goto	u1480
  1686  05E0                     u1481:
  1687  05E0  2DE7               	goto	l1895
  1688  05E1                     u1480:
  1689  05E1                     l256:
  1690  05E1  1C06               	btfss	6,0	;volatile
  1691  05E2  2DE4               	goto	u1491
  1692  05E3  2DE5               	goto	u1490
  1693  05E4                     u1491:
  1694  05E4  2DE1               	goto	l256
  1695  05E5                     u1490:
  1696  05E5                     l1893:
  1697                           
  1698                           ;main.c: 336: 
  1699  05E5  3001               	movlw	1
  1700  05E6  02E5               	subwf	_pos,f
  1701  05E7                     l1895:
  1702                           
  1703                           ;main.c: 338: 
  1704  05E7  1906               	btfsc	6,2	;volatile
  1705  05E8  2DEA               	goto	u1501
  1706  05E9  2DEB               	goto	u1500
  1707  05EA                     u1501:
  1708  05EA  2DF3               	goto	l1901
  1709  05EB                     u1500:
  1710  05EB                     l260:
  1711  05EB  1D06               	btfss	6,2	;volatile
  1712  05EC  2DEE               	goto	u1511
  1713  05ED  2DEF               	goto	u1510
  1714  05EE                     u1511:
  1715  05EE  2DEB               	goto	l260
  1716  05EF                     u1510:
  1717  05EF                     l1899:
  1718                           
  1719                           ;main.c: 340:     Lcd_Set_Cursor(2,6);
  1720  05EF  3001               	movlw	1
  1721  05F0  00FB               	movwf	??_get_controls
  1722  05F1  087B               	movf	??_get_controls,w
  1723  05F2  07E5               	addwf	_pos,f
  1724  05F3                     l1901:
  1725                           
  1726                           ;main.c: 343:     Lcd_Print_String("rTronics");
  1727  05F3  3009               	movlw	9
  1728  05F4  0265               	subwf	_pos,w
  1729  05F5  1C03               	skipc
  1730  05F6  2DF8               	goto	u1521
  1731  05F7  2DF9               	goto	u1520
  1732  05F8                     u1521:
  1733  05F8  2DFC               	goto	l1905
  1734  05F9                     u1520:
  1735  05F9                     l1903:
  1736                           
  1737                           ;main.c: 344:      _delay((unsigned long)((1500)*(20000000/4000.0)));;main.c: 345:      
      +                           lcd_clear();
  1738  05F9  01D8               	clrf	_jump
  1739  05FA  0AD8               	incf	_jump,f
  1740                           
  1741                           ;main.c: 346: 
  1742  05FB  2DFD               	goto	l1907
  1743  05FC                     l1905:
  1744                           
  1745                           ;main.c: 347:     while(1){
  1746  05FC  01D8               	clrf	_jump
  1747  05FD                     l1907:
  1748  05FD  1986               	btfsc	6,3	;volatile
  1749  05FE  2E00               	goto	u1531
  1750  05FF  2E01               	goto	u1530
  1751  0600                     u1531:
  1752  0600  2E10               	goto	l1913
  1753  0601                     u1530:
  1754  0601                     l266:
  1755  0601  1D86               	btfss	6,3	;volatile
  1756  0602  2E04               	goto	u1541
  1757  0603  2E05               	goto	u1540
  1758  0604                     u1541:
  1759  0604  2E01               	goto	l266
  1760  0605                     u1540:
  1761  0605                     l1911:
  1762  0605  0865               	movf	_pos,w
  1763  0606  00FB               	movwf	??_get_controls
  1764  0607  077B               	addwf	??_get_controls,w
  1765  0608  3E35               	addlw	(low ((_alarm_val| 0+242)))& (0+255)
  1766  0609  0084               	movwf	4
  1767  060A  3001               	movlw	1
  1768  060B  1383               	bcf	3,7	;select IRP bank0
  1769  060C  0780               	addwf	0,f
  1770  060D  0A84               	incf	4,f
  1771  060E  1803               	skipnc
  1772  060F  0A80               	incf	0,f
  1773  0610                     l1913:
  1774  0610  1A06               	btfsc	6,4	;volatile
  1775  0611  2E13               	goto	u1551
  1776  0612  2E14               	goto	u1550
  1777  0613                     u1551:
  1778  0613  2E29               	goto	l1919
  1779  0614                     u1550:
  1780  0614                     l270:
  1781  0614  1D86               	btfss	6,3	;volatile
  1782  0615  2E17               	goto	u1561
  1783  0616  2E18               	goto	u1560
  1784  0617                     u1561:
  1785  0617  2E14               	goto	l270
  1786  0618                     u1560:
  1787  0618                     l1917:
  1788  0618  0865               	movf	_pos,w
  1789  0619  00FB               	movwf	??_get_controls
  1790  061A  077B               	addwf	??_get_controls,w
  1791  061B  3E35               	addlw	(low ((_alarm_val| 0+242)))& (0+255)
  1792  061C  0084               	movwf	4
  1793  061D  30FF               	movlw	255
  1794  061E  1383               	bcf	3,7	;select IRP bank0
  1795  061F  0780               	addwf	0,f
  1796  0620  0F84               	incfsz	4,f
  1797  0621  0800               	movf	0,w
  1798  0622  1803               	skipnc
  1799  0623  0A00               	incf	0,w
  1800  0624  00FF               	movwf	btemp+1
  1801  0625  30FF               	movlw	255
  1802  0626  077F               	addwf	btemp+1,w
  1803  0627  0080               	movwf	0
  1804  0628  0384               	decf	4,f
  1805  0629                     l1919:
  1806  0629  0858               	movf	_jump,w
  1807  062A  0765               	addwf	_pos,w
  1808  062B  00FB               	movwf	??_get_controls
  1809  062C  087B               	movf	??_get_controls,w
  1810  062D  00F4               	movwf	Lcd_Set_Cursor@b
  1811  062E  3003               	movlw	3
  1812  062F  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1813  0634                     l1921:
  1814  0634  305F               	movlw	95
  1815  0635  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  1816  063A                     l1923:
  1817  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1818  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1819  063C  085A               	movf	_set_alarm,w
  1820  063D  1D03               	btfss	3,2
  1821  063E  2E40               	goto	u1571
  1822  063F  2E41               	goto	u1570
  1823  0640                     u1571:
  1824  0640  2E77               	goto	l1935
  1825  0641                     u1570:
  1826  0641                     l1925:
  1827  0641  084E               	movf	_hour_1,w
  1828  0642  00FB               	movwf	??_get_controls
  1829  0643  01FC               	clrf	??_get_controls+1
  1830  0644  0844               	movf	_alarm_val+1,w
  1831  0645  067C               	xorwf	??_get_controls+1,w
  1832  0646  1D03               	skipz
  1833  0647  2E4A               	goto	u1585
  1834  0648  0843               	movf	_alarm_val,w
  1835  0649  067B               	xorwf	??_get_controls,w
  1836  064A                     u1585:
  1837  064A  1D03               	skipz
  1838  064B  2E4D               	goto	u1581
  1839  064C  2E4E               	goto	u1580
  1840  064D                     u1581:
  1841  064D  2E77               	goto	l1935
  1842  064E                     u1580:
  1843  064E                     l1927:
  1844  064E  084F               	movf	_hour_0,w
  1845  064F  00FB               	movwf	??_get_controls
  1846  0650  01FC               	clrf	??_get_controls+1
  1847  0651  0846               	movf	_alarm_val+3,w
  1848  0652  067C               	xorwf	??_get_controls+1,w
  1849  0653  1D03               	skipz
  1850  0654  2E57               	goto	u1595
  1851  0655  0845               	movf	_alarm_val+2,w
  1852  0656  067B               	xorwf	??_get_controls,w
  1853  0657                     u1595:
  1854  0657  1D03               	skipz
  1855  0658  2E5A               	goto	u1591
  1856  0659  2E5B               	goto	u1590
  1857  065A                     u1591:
  1858  065A  2E77               	goto	l1935
  1859  065B                     u1590:
  1860  065B                     l1929:
  1861  065B  0850               	movf	_min_1,w
  1862  065C  00FB               	movwf	??_get_controls
  1863  065D  01FC               	clrf	??_get_controls+1
  1864  065E  0848               	movf	_alarm_val+5,w
  1865  065F  067C               	xorwf	??_get_controls+1,w
  1866  0660  1D03               	skipz
  1867  0661  2E64               	goto	u1605
  1868  0662  0847               	movf	_alarm_val+4,w
  1869  0663  067B               	xorwf	??_get_controls,w
  1870  0664                     u1605:
  1871  0664  1D03               	skipz
  1872  0665  2E67               	goto	u1601
  1873  0666  2E68               	goto	u1600
  1874  0667                     u1601:
  1875  0667  2E77               	goto	l1935
  1876  0668                     u1600:
  1877  0668                     l1931:
  1878  0668  0851               	movf	_min_0,w
  1879  0669  00FB               	movwf	??_get_controls
  1880  066A  01FC               	clrf	??_get_controls+1
  1881  066B  084A               	movf	_alarm_val+7,w
  1882  066C  067C               	xorwf	??_get_controls+1,w
  1883  066D  1D03               	skipz
  1884  066E  2E71               	goto	u1615
  1885  066F  0849               	movf	_alarm_val+6,w
  1886  0670  067B               	xorwf	??_get_controls,w
  1887  0671                     u1615:
  1888  0671  1D03               	skipz
  1889  0672  2E74               	goto	u1611
  1890  0673  2E75               	goto	u1610
  1891  0674                     u1611:
  1892  0674  2E77               	goto	l1935
  1893  0675                     u1610:
  1894  0675                     l1933:
  1895  0675  01D9               	clrf	_trigger_alarm
  1896  0676  0AD9               	incf	_trigger_alarm,f
  1897  0677                     l1935:
  1898  0677  0859               	movf	_trigger_alarm,w
  1899  0678  1D03               	btfss	3,2
  1900  0679  2E7B               	goto	u1621
  1901  067A  2E7C               	goto	u1620
  1902  067B                     u1621:
  1903  067B  2E8E               	goto	l274
  1904  067C                     u1620:
  1905  067C                     l1937:
  1906  067C  1407               	bsf	7,0	;volatile
  1907  067D                     l1939:
  1908  067D  300F               	movlw	15
  1909  067E  00FB               	movwf	??_get_controls
  1910  067F  087B               	movf	??_get_controls,w
  1911  0680  00F4               	movwf	Lcd_Set_Cursor@b
  1912  0681  3004               	movlw	4
  1913  0682  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1914  0687                     l1941:
  1915  0687  3036               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1916  0688  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
  1917  068D  2E9F               	goto	l1947
  1918  068E                     l274:
  1919  068E  1007               	bcf	7,0	;volatile
  1920  068F                     l1943:
  1921  068F  300F               	movlw	15
  1922  0690  00FB               	movwf	??_get_controls
  1923  0691  087B               	movf	??_get_controls,w
  1924  0692  00F4               	movwf	Lcd_Set_Cursor@b
  1925  0693  3004               	movlw	4
  1926  0694  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  1927  0699                     l1945:
  1928  0699  3032               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1929  069A  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
  1930  069F                     l1947:
  1931  069F  3002               	movlw	2
  1932  06A0  00FD               	movwf	??_get_controls+2
  1933  06A1  3045               	movlw	69
  1934  06A2  00FC               	movwf	??_get_controls+1
  1935  06A3  30A9               	movlw	169
  1936  06A4  00FB               	movwf	??_get_controls
  1937  06A5                     u1737:
  1938  06A5  0BFB               	decfsz	??_get_controls,f
  1939  06A6  2EA5               	goto	u1737
  1940  06A7  0BFC               	decfsz	??_get_controls+1,f
  1941  06A8  2EA5               	goto	u1737
  1942  06A9  0BFD               	decfsz	??_get_controls+2,f
  1943  06AA  2EA5               	goto	u1737
  1944  06AB  2EAC               	nop2
  1945  06AC                     l276:
  1946  06AC  0008               	return
  1947  06AD                     __end_of_get_controls:
  1948                           
  1949                           	psect	text6
  1950  0EC0                     __ptext6:	
  1951 ;; *************** function _get_adc *****************
  1952 ;; Defined at:
  1953 ;;		line 386 in file "main.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  ADC_Results     2    4[COMMON] unsigned int 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    0[COMMON] unsigned int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, btemp+1
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         2       0       0       0       0
  1968 ;;      Locals:         2       0       0       0       0
  1969 ;;      Temps:          2       0       0       0       0
  1970 ;;      Totals:         6       0       0       0       0
  1971 ;;Total ram usage:        6 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980  0EC0                     _get_adc:	
  1981                           ;psect for function _get_adc
  1982                           
  1983  0EC0                     l1949:	
  1984                           ;incstack = 0
  1985                           ; Regs used in _get_adc: [wreg+status,2+btemp+1]
  1986                           
  1987  0EC0                     l282:
  1988  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0EC2  191F               	btfsc	31,2	;volatile
  1991  0EC3  2EC5               	goto	u1631
  1992  0EC4  2EC6               	goto	u1630
  1993  0EC5                     u1631:
  1994  0EC5  2EC0               	goto	l282
  1995  0EC6                     u1630:
  1996  0EC6                     l1951:
  1997  0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0EC8  081E               	movf	30,w	;volatile
  2000  0EC9  00F2               	movwf	??_get_adc
  2001  0ECA  01F3               	clrf	??_get_adc+1
  2002  0ECB  0872               	movf	??_get_adc,w
  2003  0ECC  00F4               	movwf	get_adc@ADC_Results
  2004  0ECD  0873               	movf	??_get_adc+1,w
  2005  0ECE  00F5               	movwf	get_adc@ADC_Results+1
  2006  0ECF                     l1953:
  2007  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0ED1  081E               	movf	30,w	;volatile
  2010  0ED2  00F2               	movwf	??_get_adc
  2011  0ED3  01F3               	clrf	??_get_adc+1
  2012  0ED4  0872               	movf	??_get_adc,w
  2013  0ED5  00F3               	movwf	??_get_adc+1
  2014  0ED6  01F2               	clrf	??_get_adc
  2015  0ED7  0872               	movf	??_get_adc,w
  2016  0ED8  04F4               	iorwf	get_adc@ADC_Results,f
  2017  0ED9  0873               	movf	??_get_adc+1,w
  2018  0EDA  04F5               	iorwf	get_adc@ADC_Results+1,f
  2019  0EDB                     l1955:
  2020  0EDB  0875               	movf	get_adc@ADC_Results+1,w
  2021  0EDC  00F1               	movwf	?_get_adc+1
  2022  0EDD  0874               	movf	get_adc@ADC_Results,w
  2023  0EDE  00F0               	movwf	?_get_adc
  2024  0EDF                     l285:
  2025  0EDF  0008               	return
  2026  0EE0                     __end_of_get_adc:
  2027                           
  2028                           	psect	text7
  2029  012A                     __ptext7:	
  2030 ;; *************** function _display_stop_time *****************
  2031 ;; Defined at:
  2032 ;;		line 281 in file "main.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0
  2048 ;;      Temps:          3       0       0       0       0
  2049 ;;      Totals:         3       0       0       0       0
  2050 ;;Total ram usage:        3 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 3
  2053 ;; This function calls:
  2054 ;;		_Lcd_Print_Char
  2055 ;;		_Lcd_Print_String
  2056 ;;		_Lcd_Set_Cursor
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062  012A                     _display_stop_time:	
  2063                           ;psect for function _display_stop_time
  2064                           
  2065  012A                     l1847:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _display_stop_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2068                           
  2069                           
  2070                           ;main.c: 282:                 while (!RB3);
  2071  012A  01F4               	clrf	Lcd_Set_Cursor@b
  2072  012B  0AF4               	incf	Lcd_Set_Cursor@b,f
  2073  012C  3003               	movlw	3
  2074  012D  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  2075  0132                     l1849:
  2076                           
  2077                           ;main.c: 283:                 alarm_val[(pos - 7)]++;
  2078  0132  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2079  0133  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
  2080  0138                     l1851:
  2081                           
  2082                           ;main.c: 284:             }
  2083  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2085  013A  0843               	movf	_alarm_val,w
  2086  013B  3E30               	addlw	48
  2087  013C  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2088  0141                     l1853:
  2089                           
  2090                           ;main.c: 285:             if (RB4 == 0) {
  2091  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0143  0845               	movf	_alarm_val+2,w
  2094  0144  3E30               	addlw	48
  2095  0145  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2096  014A                     l1855:
  2097                           
  2098                           ;main.c: 286:                 while (!RB3);
  2099  014A  303A               	movlw	58
  2100  014B  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2101  0150                     l1857:
  2102                           
  2103                           ;main.c: 287:                 alarm_val[(pos - 7)]--;
  2104  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0152  0847               	movf	_alarm_val+4,w
  2107  0153  3E30               	addlw	48
  2108  0154  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2109  0159                     l1859:
  2110                           
  2111                           ;main.c: 288:             }
  2112  0159  1283               	bcf	3,5	;RP0=0, select bank0
  2113  015A  1303               	bcf	3,6	;RP1=0, select bank0
  2114  015B  0849               	movf	_alarm_val+6,w
  2115  015C  3E30               	addlw	48
  2116  015D  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2117  0162                     l1861:
  2118                           
  2119                           ;main.c: 289: 
  2120  0162  303A               	movlw	58
  2121  0163  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2122  0168                     l1863:
  2123                           
  2124                           ;main.c: 290:             Lcd_Set_Cursor(3, pos + jump);
  2125  0168  3030               	movlw	48
  2126  0169  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2127  016E                     l1865:
  2128                           
  2129                           ;main.c: 291:             Lcd_Print_Char(95);
  2130  016E  3030               	movlw	48
  2131  016F  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2132  0174                     l1867:
  2133                           
  2134                           ;main.c: 292:         }
  2135  0174  3002               	movlw	2
  2136  0175  00FD               	movwf	??_display_stop_time+2
  2137  0176  3045               	movlw	69
  2138  0177  00FC               	movwf	??_display_stop_time+1
  2139  0178  30A9               	movlw	169
  2140  0179  00FB               	movwf	??_display_stop_time
  2141  017A                     u1747:
  2142  017A  0BFB               	decfsz	??_display_stop_time,f
  2143  017B  297A               	goto	u1747
  2144  017C  0BFC               	decfsz	??_display_stop_time+1,f
  2145  017D  297A               	goto	u1747
  2146  017E  0BFD               	decfsz	??_display_stop_time+2,f
  2147  017F  297A               	goto	u1747
  2148  0180  2981               	nop2
  2149  0181                     l237:
  2150  0181  0008               	return
  2151  0182                     __end_of_display_stop_time:
  2152                           
  2153                           	psect	text8
  2154  0E50                     __ptext8:	
  2155 ;; *************** function _display_relay_status *****************
  2156 ;; Defined at:
  2157 ;;		line 295 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 3
  2178 ;; This function calls:
  2179 ;;		_Lcd_Print_String
  2180 ;;		_Lcd_Set_Cursor
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186  0E50                     _display_relay_status:	
  2187                           ;psect for function _display_relay_status
  2188                           
  2189  0E50                     l1869:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _display_relay_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;main.c: 296:             trigger_alarm = 1;
  2195  0E50  01F4               	clrf	Lcd_Set_Cursor@b
  2196  0E51  0AF4               	incf	Lcd_Set_Cursor@b,f
  2197  0E52  3004               	movlw	4
  2198  0E53  120A  118A  22AA  120A  158A  	fcall	_Lcd_Set_Cursor
  2199  0E58                     l1871:
  2200                           
  2201                           ;main.c: 297: 
  2202  0E58  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2203  0E59  120A  158A  274C  120A  158A  	fcall	_Lcd_Print_String
  2204  0E5E                     l240:
  2205  0E5E  0008               	return
  2206  0E5F                     __end_of_display_relay_status:
  2207                           
  2208                           	psect	text9
  2209  0410                     __ptext9:	
  2210 ;; *************** function _display_current_time *****************
  2211 ;; Defined at:
  2212 ;;		line 259 in file "main.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0
  2229 ;;      Totals:         1       0       0       0       0
  2230 ;;Total ram usage:        1 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 3
  2233 ;; This function calls:
  2234 ;;		_Lcd_Print_Char
  2235 ;;		_Lcd_Print_String
  2236 ;;		_Lcd_Set_Cursor
  2237 ;;		___awdiv
  2238 ;;		___awmod
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244  0410                     _display_current_time:	
  2245                           ;psect for function _display_current_time
  2246                           
  2247  0410                     l1827:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _display_current_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2250                           
  2251                           
  2252                           ;main.c: 261: 
  2253  0410  300A               	movlw	10
  2254  0411  00F0               	movwf	___awmod@divisor
  2255  0412  3000               	movlw	0
  2256  0413  00F1               	movwf	___awmod@divisor+1
  2257  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0416  084C               	movf	_sec+1,w
  2260  0417  00F3               	movwf	___awmod@dividend+1
  2261  0418  084B               	movf	_sec,w
  2262  0419  00F2               	movwf	___awmod@dividend
  2263  041A  120A  118A  2182  120A  118A  	fcall	___awmod
  2264  041F  0870               	movf	?___awmod,w
  2265  0420  00FB               	movwf	??_display_current_time
  2266  0421  087B               	movf	??_display_current_time,w
  2267  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0424  00D3               	movwf	_sec_0
  2270                           
  2271                           ;main.c: 262: 
  2272  0425  300A               	movlw	10
  2273  0426  00F0               	movwf	___awdiv@divisor
  2274  0427  3000               	movlw	0
  2275  0428  00F1               	movwf	___awdiv@divisor+1
  2276  0429  084C               	movf	_sec+1,w
  2277  042A  00F3               	movwf	___awdiv@dividend+1
  2278  042B  084B               	movf	_sec,w
  2279  042C  00F2               	movwf	___awdiv@dividend
  2280  042D  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2281  0432  0870               	movf	?___awdiv,w
  2282  0433  00FB               	movwf	??_display_current_time
  2283  0434  087B               	movf	??_display_current_time,w
  2284  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0437  00D2               	movwf	_sec_1
  2287                           
  2288                           ;main.c: 263: 
  2289  0438  300A               	movlw	10
  2290  0439  00F0               	movwf	___awmod@divisor
  2291  043A  3000               	movlw	0
  2292  043B  00F1               	movwf	___awmod@divisor+1
  2293  043C  0864               	movf	_min+1,w
  2294  043D  00F3               	movwf	___awmod@dividend+1
  2295  043E  0863               	movf	_min,w
  2296  043F  00F2               	movwf	___awmod@dividend
  2297  0440  120A  118A  2182  120A  118A  	fcall	___awmod
  2298  0445  0870               	movf	?___awmod,w
  2299  0446  00FB               	movwf	??_display_current_time
  2300  0447  087B               	movf	??_display_current_time,w
  2301  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2303  044A  00D1               	movwf	_min_0
  2304                           
  2305                           ;main.c: 264:         if (set_alarm == 1) {
  2306  044B  300A               	movlw	10
  2307  044C  00F0               	movwf	___awdiv@divisor
  2308  044D  3000               	movlw	0
  2309  044E  00F1               	movwf	___awdiv@divisor+1
  2310  044F  0864               	movf	_min+1,w
  2311  0450  00F3               	movwf	___awdiv@dividend+1
  2312  0451  0863               	movf	_min,w
  2313  0452  00F2               	movwf	___awdiv@dividend
  2314  0453  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2315  0458  0870               	movf	?___awdiv,w
  2316  0459  00FB               	movwf	??_display_current_time
  2317  045A  087B               	movf	??_display_current_time,w
  2318  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2319  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2320  045D  00D0               	movwf	_min_1
  2321                           
  2322                           ;main.c: 265:             if (RB0 == 0) {
  2323  045E  300A               	movlw	10
  2324  045F  00F0               	movwf	___awmod@divisor
  2325  0460  3000               	movlw	0
  2326  0461  00F1               	movwf	___awmod@divisor+1
  2327  0462  0862               	movf	_hour+1,w
  2328  0463  00F3               	movwf	___awmod@dividend+1
  2329  0464  0861               	movf	_hour,w
  2330  0465  00F2               	movwf	___awmod@dividend
  2331  0466  120A  118A  2182  120A  118A  	fcall	___awmod
  2332  046B  0870               	movf	?___awmod,w
  2333  046C  00FB               	movwf	??_display_current_time
  2334  046D  087B               	movf	??_display_current_time,w
  2335  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2336  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0470  00CF               	movwf	_hour_0
  2338                           
  2339                           ;main.c: 266:                 while (!RB0);
  2340  0471  300A               	movlw	10
  2341  0472  00F0               	movwf	___awdiv@divisor
  2342  0473  3000               	movlw	0
  2343  0474  00F1               	movwf	___awdiv@divisor+1
  2344  0475  0862               	movf	_hour+1,w
  2345  0476  00F3               	movwf	___awdiv@dividend+1
  2346  0477  0861               	movf	_hour,w
  2347  0478  00F2               	movwf	___awdiv@dividend
  2348  0479  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2349  047E  0870               	movf	?___awdiv,w
  2350  047F  00FB               	movwf	??_display_current_time
  2351  0480  087B               	movf	??_display_current_time,w
  2352  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0483  00CE               	movwf	_hour_1
  2355                           
  2356                           ;main.c: 269:             if (RB2 == 0) {
  2357  0484  01F4               	clrf	Lcd_Set_Cursor@b
  2358  0485  0AF4               	incf	Lcd_Set_Cursor@b,f
  2359  0486  3002               	movlw	2
  2360  0487  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  2361  048C                     l1829:
  2362                           
  2363                           ;main.c: 270:                 while (!RB2);
  2364  048C  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2365  048D  120A  158A  274C  120A  118A  	fcall	_Lcd_Print_String
  2366  0492                     l1831:
  2367                           
  2368                           ;main.c: 271:                 pos++;
  2369  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0494  084E               	movf	_hour_1,w
  2372  0495  3E30               	addlw	48
  2373  0496  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2374  049B                     l1833:
  2375                           
  2376                           ;main.c: 272:             }
  2377  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2378  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2379  049D  084F               	movf	_hour_0,w
  2380  049E  3E30               	addlw	48
  2381  049F  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2382  04A4                     l1835:
  2383                           
  2384                           ;main.c: 273: 
  2385  04A4  303A               	movlw	58
  2386  04A5  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2387  04AA                     l1837:
  2388                           
  2389                           ;main.c: 274:             if (pos >= 9)
  2390  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2391  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2392  04AC  0850               	movf	_min_1,w
  2393  04AD  3E30               	addlw	48
  2394  04AE  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2395  04B3                     l1839:
  2396                           
  2397                           ;main.c: 275:             {
  2398  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2399  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2400  04B5  0851               	movf	_min_0,w
  2401  04B6  3E30               	addlw	48
  2402  04B7  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2403  04BC                     l1841:
  2404                           
  2405                           ;main.c: 276:                 jump = 1;
  2406  04BC  303A               	movlw	58
  2407  04BD  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2408  04C2                     l1843:
  2409                           
  2410                           ;main.c: 277:             } else
  2411  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2412  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2413  04C4  0852               	movf	_sec_1,w
  2414  04C5  3E30               	addlw	48
  2415  04C6  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2416  04CB                     l1845:
  2417                           
  2418                           ;main.c: 278:                 jump = 0;
  2419  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2420  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2421  04CD  0853               	movf	_sec_0,w
  2422  04CE  3E30               	addlw	48
  2423  04CF  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2424  04D4                     l234:
  2425  04D4  0008               	return
  2426  04D5                     __end_of_display_current_time:
  2427                           
  2428                           	psect	text10
  2429  0F4C                     __ptext10:	
  2430 ;; *************** function _Lcd_Print_String *****************
  2431 ;; Defined at:
  2432 ;;		line 232 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  a               1    wreg     PTR unsigned char 
  2435 ;;		 -> STR_7(9), STR_6(11), STR_5(4), STR_4(3), 
  2436 ;;		 -> STR_3(15), STR_2(7), STR_1(7), 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  a               1    9[COMMON] PTR unsigned char 
  2439 ;;		 -> STR_7(9), STR_6(11), STR_5(4), STR_4(3), 
  2440 ;;		 -> STR_3(15), STR_2(7), STR_1(7), 
  2441 ;;  i               2    7[COMMON] int 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         3       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0
  2454 ;;      Totals:         3       0       0       0       0
  2455 ;;Total ram usage:        3 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		_Lcd_Print_Char
  2460 ;; This function is called by:
  2461 ;;		_display_current_time
  2462 ;;		_display_stop_time
  2463 ;;		_display_relay_status
  2464 ;;		_get_controls
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469  0F4C                     _Lcd_Print_String:	
  2470                           ;psect for function _Lcd_Print_String
  2471                           
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2475                           ;Lcd_Print_String@a stored from wreg
  2476  0F4C  00F9               	movwf	Lcd_Print_String@a
  2477  0F4D                     l1655:
  2478                           
  2479                           ;main.c: 232:     char year_0 = year % 10;;main.c: 233:     char year_1 = year / 10;;mai
      +                          n.c: 234:     char month_0 = month % 10;;main.c: 235:     char month_1 = month / 10;
  2480  0F4D  01F7               	clrf	Lcd_Print_String@i
  2481  0F4E  01F8               	clrf	Lcd_Print_String@i+1
  2482  0F4F  2F63               	goto	l1661
  2483  0F50                     l1657:
  2484                           
  2485                           ;main.c: 236:     char day_0 = day % 10;
  2486  0F50  0877               	movf	Lcd_Print_String@i,w
  2487  0F51  0779               	addwf	Lcd_Print_String@a,w
  2488  0F52  0084               	movwf	4
  2489  0F53  120A  118A  2003  120A  158A  	fcall	stringdir
  2490  0F58  120A  118A  208E  120A  158A  	fcall	_Lcd_Print_Char
  2491  0F5D                     l1659:
  2492  0F5D  3001               	movlw	1
  2493  0F5E  07F7               	addwf	Lcd_Print_String@i,f
  2494  0F5F  1803               	skipnc
  2495  0F60  0AF8               	incf	Lcd_Print_String@i+1,f
  2496  0F61  3000               	movlw	0
  2497  0F62  07F8               	addwf	Lcd_Print_String@i+1,f
  2498  0F63                     l1661:
  2499  0F63  0877               	movf	Lcd_Print_String@i,w
  2500  0F64  0779               	addwf	Lcd_Print_String@a,w
  2501  0F65  0084               	movwf	4
  2502  0F66  120A  118A  2003  120A  158A  	fcall	stringdir
  2503  0F6B  3A00               	xorlw	0
  2504  0F6C  1D03               	skipz
  2505  0F6D  2F6F               	goto	u1071
  2506  0F6E  2F70               	goto	u1070
  2507  0F6F                     u1071:
  2508  0F6F  2F50               	goto	l1657
  2509  0F70                     u1070:
  2510  0F70                     l222:
  2511  0F70  0008               	return
  2512  0F71                     __end_of_Lcd_Print_String:
  2513                           
  2514                           	psect	text11
  2515  034F                     __ptext11:	
  2516 ;; *************** function _display_current_date *****************
  2517 ;; Defined at:
  2518 ;;		line 300 in file "main.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  day_1           1    5[BANK0 ] unsigned char 
  2523 ;;  day_0           1    4[BANK0 ] unsigned char 
  2524 ;;  month_1         1    3[BANK0 ] unsigned char 
  2525 ;;  month_0         1    2[BANK0 ] unsigned char 
  2526 ;;  year_1          1    1[BANK0 ] unsigned char 
  2527 ;;  year_0          1    0[BANK0 ] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, pclath, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       0       0       0       0
  2538 ;;      Locals:         0       6       0       0       0
  2539 ;;      Temps:          1       0       0       0       0
  2540 ;;      Totals:         1       6       0       0       0
  2541 ;;Total ram usage:        7 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 3
  2544 ;; This function calls:
  2545 ;;		_Lcd_Print_Char
  2546 ;;		_Lcd_Set_Cursor
  2547 ;;		___awdiv
  2548 ;;		___awmod
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554  034F                     _display_current_date:	
  2555                           ;psect for function _display_current_date
  2556                           
  2557  034F                     l1873:	
  2558                           ;incstack = 0
  2559                           ; Regs used in _display_current_date: [wreg+status,2+status,0+pclath+cstack]
  2560                           
  2561                           
  2562                           ;main.c: 301:             Lcd_Print_String("ON");
  2563  034F  300A               	movlw	10
  2564  0350  00F0               	movwf	___awmod@divisor
  2565  0351  3000               	movlw	0
  2566  0352  00F1               	movwf	___awmod@divisor+1
  2567  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0355  085C               	movf	_year+1,w
  2570  0356  00F3               	movwf	___awmod@dividend+1
  2571  0357  085B               	movf	_year,w
  2572  0358  00F2               	movwf	___awmod@dividend
  2573  0359  120A  118A  2182  120A  118A  	fcall	___awmod
  2574  035E  0870               	movf	?___awmod,w
  2575  035F  00FB               	movwf	??_display_current_date
  2576  0360  087B               	movf	??_display_current_date,w
  2577  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0363  00A0               	movwf	display_current_date@year_0
  2580                           
  2581                           ;main.c: 302:         }else{
  2582  0364  300A               	movlw	10
  2583  0365  00F0               	movwf	___awdiv@divisor
  2584  0366  3000               	movlw	0
  2585  0367  00F1               	movwf	___awdiv@divisor+1
  2586  0368  085C               	movf	_year+1,w
  2587  0369  00F3               	movwf	___awdiv@dividend+1
  2588  036A  085B               	movf	_year,w
  2589  036B  00F2               	movwf	___awdiv@dividend
  2590  036C  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2591  0371  0870               	movf	?___awdiv,w
  2592  0372  00FB               	movwf	??_display_current_date
  2593  0373  087B               	movf	??_display_current_date,w
  2594  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0376  00A1               	movwf	display_current_date@year_1
  2597                           
  2598                           ;main.c: 303:             PORTCbits.RC0 = 0;
  2599  0377  300A               	movlw	10
  2600  0378  00F0               	movwf	___awmod@divisor
  2601  0379  3000               	movlw	0
  2602  037A  00F1               	movwf	___awmod@divisor+1
  2603  037B  085E               	movf	_month+1,w
  2604  037C  00F3               	movwf	___awmod@dividend+1
  2605  037D  085D               	movf	_month,w
  2606  037E  00F2               	movwf	___awmod@dividend
  2607  037F  120A  118A  2182  120A  118A  	fcall	___awmod
  2608  0384  0870               	movf	?___awmod,w
  2609  0385  00FB               	movwf	??_display_current_date
  2610  0386  087B               	movf	??_display_current_date,w
  2611  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0389  00A2               	movwf	display_current_date@month_0
  2614                           
  2615                           ;main.c: 304:             Lcd_Set_Cursor(4, 15);
  2616  038A  300A               	movlw	10
  2617  038B  00F0               	movwf	___awdiv@divisor
  2618  038C  3000               	movlw	0
  2619  038D  00F1               	movwf	___awdiv@divisor+1
  2620  038E  085E               	movf	_month+1,w
  2621  038F  00F3               	movwf	___awdiv@dividend+1
  2622  0390  085D               	movf	_month,w
  2623  0391  00F2               	movwf	___awdiv@dividend
  2624  0392  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2625  0397  0870               	movf	?___awdiv,w
  2626  0398  00FB               	movwf	??_display_current_date
  2627  0399  087B               	movf	??_display_current_date,w
  2628  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2629  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2630  039C  00A3               	movwf	display_current_date@month_1
  2631                           
  2632                           ;main.c: 305:             Lcd_Print_String("OFF");
  2633  039D  300A               	movlw	10
  2634  039E  00F0               	movwf	___awmod@divisor
  2635  039F  3000               	movlw	0
  2636  03A0  00F1               	movwf	___awmod@divisor+1
  2637  03A1  0860               	movf	_day+1,w
  2638  03A2  00F3               	movwf	___awmod@dividend+1
  2639  03A3  085F               	movf	_day,w
  2640  03A4  00F2               	movwf	___awmod@dividend
  2641  03A5  120A  118A  2182  120A  118A  	fcall	___awmod
  2642  03AA  0870               	movf	?___awmod,w
  2643  03AB  00FB               	movwf	??_display_current_date
  2644  03AC  087B               	movf	??_display_current_date,w
  2645  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2646  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2647  03AF  00A4               	movwf	display_current_date@day_0
  2648                           
  2649                           ;main.c: 306:         }
  2650  03B0  300A               	movlw	10
  2651  03B1  00F0               	movwf	___awdiv@divisor
  2652  03B2  3000               	movlw	0
  2653  03B3  00F1               	movwf	___awdiv@divisor+1
  2654  03B4  0860               	movf	_day+1,w
  2655  03B5  00F3               	movwf	___awdiv@dividend+1
  2656  03B6  085F               	movf	_day,w
  2657  03B7  00F2               	movwf	___awdiv@dividend
  2658  03B8  120A  118A  21DB  120A  118A  	fcall	___awdiv
  2659  03BD  0870               	movf	?___awdiv,w
  2660  03BE  00FB               	movwf	??_display_current_date
  2661  03BF  087B               	movf	??_display_current_date,w
  2662  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03C2  00A5               	movwf	display_current_date@day_1
  2665                           
  2666                           ;main.c: 308:         _delay((unsigned long)((50)*(20000000/4000.0)));
  2667  03C3  300D               	movlw	13
  2668  03C4  00FB               	movwf	??_display_current_date
  2669  03C5  087B               	movf	??_display_current_date,w
  2670  03C6  00F4               	movwf	Lcd_Set_Cursor@b
  2671  03C7  3001               	movlw	1
  2672  03C8  120A  118A  22AA  120A  118A  	fcall	_Lcd_Set_Cursor
  2673                           
  2674                           ;main.c: 309: 
  2675  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2676  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2677  03CF  0825               	movf	display_current_date@day_1,w
  2678  03D0  3E30               	addlw	48
  2679  03D1  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2680                           
  2681                           ;main.c: 310: }
  2682  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2683  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2684  03D8  0824               	movf	display_current_date@day_0,w
  2685  03D9  3E30               	addlw	48
  2686  03DA  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2687                           
  2688                           ;main.c: 311: 
  2689  03DF  302D               	movlw	45
  2690  03E0  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2691                           
  2692                           ;main.c: 312: void init_adc(){
  2693  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2694  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2695  03E7  0823               	movf	display_current_date@month_1,w
  2696  03E8  3E30               	addlw	48
  2697  03E9  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2698                           
  2699                           ;main.c: 313:     ADCON0 = 0b11000100;
  2700  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2701  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2702  03F0  0822               	movf	display_current_date@month_0,w
  2703  03F1  3E30               	addlw	48
  2704  03F2  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2705                           
  2706                           ;main.c: 314:     ADCON1 = 0b11001110;
  2707  03F7  302D               	movlw	45
  2708  03F8  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2709                           
  2710                           ;main.c: 315: }
  2711  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2712  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2713  03FF  0821               	movf	display_current_date@year_1,w
  2714  0400  3E30               	addlw	48
  2715  0401  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2716                           
  2717                           ;main.c: 316: 
  2718  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0408  0820               	movf	display_current_date@year_0,w
  2721  0409  3E30               	addlw	48
  2722  040A  120A  118A  208E  120A  118A  	fcall	_Lcd_Print_Char
  2723  040F                     l243:
  2724  040F  0008               	return
  2725  0410                     __end_of_display_current_date:
  2726                           
  2727                           	psect	text12
  2728  0182                     __ptext12:	
  2729 ;; *************** function ___awmod *****************
  2730 ;; Defined at:
  2731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  divisor         2    0[COMMON] int 
  2734 ;;  dividend        2    2[COMMON] int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  sign            1    6[COMMON] unsigned char 
  2737 ;;  counter         1    5[COMMON] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[COMMON] int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         4       0       0       0       0
  2748 ;;      Locals:         2       0       0       0       0
  2749 ;;      Temps:          1       0       0       0       0
  2750 ;;      Totals:         7       0       0       0       0
  2751 ;;Total ram usage:        7 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_display_current_time
  2757 ;;		_display_current_date
  2758 ;;		_main
  2759 ;;		_DEC_2_BCD
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763  0182                     ___awmod:	
  2764                           ;psect for function ___awmod
  2765                           
  2766  0182                     l1745:	
  2767                           ;incstack = 0
  2768                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2769                           
  2770  0182  01F6               	clrf	___awmod@sign
  2771  0183                     l1747:
  2772  0183  1FF3               	btfss	___awmod@dividend+1,7
  2773  0184  2986               	goto	u1301
  2774  0185  2987               	goto	u1300
  2775  0186                     u1301:
  2776  0186  298E               	goto	l1753
  2777  0187                     u1300:
  2778  0187                     l1749:
  2779  0187  09F2               	comf	___awmod@dividend,f
  2780  0188  09F3               	comf	___awmod@dividend+1,f
  2781  0189  0AF2               	incf	___awmod@dividend,f
  2782  018A  1903               	skipnz
  2783  018B  0AF3               	incf	___awmod@dividend+1,f
  2784  018C                     l1751:
  2785  018C  01F6               	clrf	___awmod@sign
  2786  018D  0AF6               	incf	___awmod@sign,f
  2787  018E                     l1753:
  2788  018E  1FF1               	btfss	___awmod@divisor+1,7
  2789  018F  2991               	goto	u1311
  2790  0190  2992               	goto	u1310
  2791  0191                     u1311:
  2792  0191  2997               	goto	l1757
  2793  0192                     u1310:
  2794  0192                     l1755:
  2795  0192  09F0               	comf	___awmod@divisor,f
  2796  0193  09F1               	comf	___awmod@divisor+1,f
  2797  0194  0AF0               	incf	___awmod@divisor,f
  2798  0195  1903               	skipnz
  2799  0196  0AF1               	incf	___awmod@divisor+1,f
  2800  0197                     l1757:
  2801  0197  0870               	movf	___awmod@divisor,w
  2802  0198  0471               	iorwf	___awmod@divisor+1,w
  2803  0199  1903               	btfsc	3,2
  2804  019A  299C               	goto	u1321
  2805  019B  299D               	goto	u1320
  2806  019C                     u1321:
  2807  019C  29CC               	goto	l1775
  2808  019D                     u1320:
  2809  019D                     l1759:
  2810  019D  01F5               	clrf	___awmod@counter
  2811  019E  0AF5               	incf	___awmod@counter,f
  2812  019F  29AB               	goto	l1765
  2813  01A0                     l1761:
  2814  01A0  3001               	movlw	1
  2815  01A1                     u1335:
  2816  01A1  1003               	clrc
  2817  01A2  0DF0               	rlf	___awmod@divisor,f
  2818  01A3  0DF1               	rlf	___awmod@divisor+1,f
  2819  01A4  3EFF               	addlw	-1
  2820  01A5  1D03               	skipz
  2821  01A6  29A1               	goto	u1335
  2822  01A7                     l1763:
  2823  01A7  3001               	movlw	1
  2824  01A8  00F4               	movwf	??___awmod
  2825  01A9  0874               	movf	??___awmod,w
  2826  01AA  07F5               	addwf	___awmod@counter,f
  2827  01AB                     l1765:
  2828  01AB  1FF1               	btfss	___awmod@divisor+1,7
  2829  01AC  29AE               	goto	u1341
  2830  01AD  29AF               	goto	u1340
  2831  01AE                     u1341:
  2832  01AE  29A0               	goto	l1761
  2833  01AF                     u1340:
  2834  01AF                     l1767:
  2835  01AF  0871               	movf	___awmod@divisor+1,w
  2836  01B0  0273               	subwf	___awmod@dividend+1,w
  2837  01B1  1D03               	skipz
  2838  01B2  29B5               	goto	u1355
  2839  01B3  0870               	movf	___awmod@divisor,w
  2840  01B4  0272               	subwf	___awmod@dividend,w
  2841  01B5                     u1355:
  2842  01B5  1C03               	skipc
  2843  01B6  29B8               	goto	u1351
  2844  01B7  29B9               	goto	u1350
  2845  01B8                     u1351:
  2846  01B8  29BF               	goto	l1771
  2847  01B9                     u1350:
  2848  01B9                     l1769:
  2849  01B9  0870               	movf	___awmod@divisor,w
  2850  01BA  02F2               	subwf	___awmod@dividend,f
  2851  01BB  0871               	movf	___awmod@divisor+1,w
  2852  01BC  1C03               	skipc
  2853  01BD  03F3               	decf	___awmod@dividend+1,f
  2854  01BE  02F3               	subwf	___awmod@dividend+1,f
  2855  01BF                     l1771:
  2856  01BF  3001               	movlw	1
  2857  01C0                     u1365:
  2858  01C0  1003               	clrc
  2859  01C1  0CF1               	rrf	___awmod@divisor+1,f
  2860  01C2  0CF0               	rrf	___awmod@divisor,f
  2861  01C3  3EFF               	addlw	-1
  2862  01C4  1D03               	skipz
  2863  01C5  29C0               	goto	u1365
  2864  01C6                     l1773:
  2865  01C6  3001               	movlw	1
  2866  01C7  02F5               	subwf	___awmod@counter,f
  2867  01C8  1D03               	btfss	3,2
  2868  01C9  29CB               	goto	u1371
  2869  01CA  29CC               	goto	u1370
  2870  01CB                     u1371:
  2871  01CB  29AF               	goto	l1767
  2872  01CC                     u1370:
  2873  01CC                     l1775:
  2874  01CC  0876               	movf	___awmod@sign,w
  2875  01CD  1903               	btfsc	3,2
  2876  01CE  29D0               	goto	u1381
  2877  01CF  29D1               	goto	u1380
  2878  01D0                     u1381:
  2879  01D0  29D6               	goto	l1779
  2880  01D1                     u1380:
  2881  01D1                     l1777:
  2882  01D1  09F2               	comf	___awmod@dividend,f
  2883  01D2  09F3               	comf	___awmod@dividend+1,f
  2884  01D3  0AF2               	incf	___awmod@dividend,f
  2885  01D4  1903               	skipnz
  2886  01D5  0AF3               	incf	___awmod@dividend+1,f
  2887  01D6                     l1779:
  2888  01D6  0873               	movf	___awmod@dividend+1,w
  2889  01D7  00F1               	movwf	?___awmod+1
  2890  01D8  0872               	movf	___awmod@dividend,w
  2891  01D9  00F0               	movwf	?___awmod
  2892  01DA                     l547:
  2893  01DA  0008               	return
  2894  01DB                     __end_of___awmod:
  2895                           
  2896                           	psect	text13
  2897  01DB                     __ptext13:	
  2898 ;; *************** function ___awdiv *****************
  2899 ;; Defined at:
  2900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  divisor         2    0[COMMON] int 
  2903 ;;  dividend        2    2[COMMON] int 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  quotient        2    7[COMMON] int 
  2906 ;;  sign            1    6[COMMON] unsigned char 
  2907 ;;  counter         1    5[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    0[COMMON] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         4       0       0       0       0
  2918 ;;      Locals:         4       0       0       0       0
  2919 ;;      Temps:          1       0       0       0       0
  2920 ;;      Totals:         9       0       0       0       0
  2921 ;;Total ram usage:        9 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_display_current_time
  2927 ;;		_display_current_date
  2928 ;;		_main
  2929 ;;		_DEC_2_BCD
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933  01DB                     ___awdiv:	
  2934                           ;psect for function ___awdiv
  2935                           
  2936  01DB                     l1701:	
  2937                           ;incstack = 0
  2938                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2939                           
  2940  01DB  01F6               	clrf	___awdiv@sign
  2941  01DC                     l1703:
  2942  01DC  1FF1               	btfss	___awdiv@divisor+1,7
  2943  01DD  29DF               	goto	u1201
  2944  01DE  29E0               	goto	u1200
  2945  01DF                     u1201:
  2946  01DF  29E7               	goto	l1709
  2947  01E0                     u1200:
  2948  01E0                     l1705:
  2949  01E0  09F0               	comf	___awdiv@divisor,f
  2950  01E1  09F1               	comf	___awdiv@divisor+1,f
  2951  01E2  0AF0               	incf	___awdiv@divisor,f
  2952  01E3  1903               	skipnz
  2953  01E4  0AF1               	incf	___awdiv@divisor+1,f
  2954  01E5                     l1707:
  2955  01E5  01F6               	clrf	___awdiv@sign
  2956  01E6  0AF6               	incf	___awdiv@sign,f
  2957  01E7                     l1709:
  2958  01E7  1FF3               	btfss	___awdiv@dividend+1,7
  2959  01E8  29EA               	goto	u1211
  2960  01E9  29EB               	goto	u1210
  2961  01EA                     u1211:
  2962  01EA  29F4               	goto	l1715
  2963  01EB                     u1210:
  2964  01EB                     l1711:
  2965  01EB  09F2               	comf	___awdiv@dividend,f
  2966  01EC  09F3               	comf	___awdiv@dividend+1,f
  2967  01ED  0AF2               	incf	___awdiv@dividend,f
  2968  01EE  1903               	skipnz
  2969  01EF  0AF3               	incf	___awdiv@dividend+1,f
  2970  01F0                     l1713:
  2971  01F0  3001               	movlw	1
  2972  01F1  00F4               	movwf	??___awdiv
  2973  01F2  0874               	movf	??___awdiv,w
  2974  01F3  06F6               	xorwf	___awdiv@sign,f
  2975  01F4                     l1715:
  2976  01F4  01F7               	clrf	___awdiv@quotient
  2977  01F5  01F8               	clrf	___awdiv@quotient+1
  2978  01F6                     l1717:
  2979  01F6  0870               	movf	___awdiv@divisor,w
  2980  01F7  0471               	iorwf	___awdiv@divisor+1,w
  2981  01F8  1903               	btfsc	3,2
  2982  01F9  29FB               	goto	u1221
  2983  01FA  29FC               	goto	u1220
  2984  01FB                     u1221:
  2985  01FB  2A33               	goto	l1737
  2986  01FC                     u1220:
  2987  01FC                     l1719:
  2988  01FC  01F5               	clrf	___awdiv@counter
  2989  01FD  0AF5               	incf	___awdiv@counter,f
  2990  01FE  2A0A               	goto	l1725
  2991  01FF                     l1721:
  2992  01FF  3001               	movlw	1
  2993  0200                     u1235:
  2994  0200  1003               	clrc
  2995  0201  0DF0               	rlf	___awdiv@divisor,f
  2996  0202  0DF1               	rlf	___awdiv@divisor+1,f
  2997  0203  3EFF               	addlw	-1
  2998  0204  1D03               	skipz
  2999  0205  2A00               	goto	u1235
  3000  0206                     l1723:
  3001  0206  3001               	movlw	1
  3002  0207  00F4               	movwf	??___awdiv
  3003  0208  0874               	movf	??___awdiv,w
  3004  0209  07F5               	addwf	___awdiv@counter,f
  3005  020A                     l1725:
  3006  020A  1FF1               	btfss	___awdiv@divisor+1,7
  3007  020B  2A0D               	goto	u1241
  3008  020C  2A0E               	goto	u1240
  3009  020D                     u1241:
  3010  020D  29FF               	goto	l1721
  3011  020E                     u1240:
  3012  020E                     l1727:
  3013  020E  3001               	movlw	1
  3014  020F                     u1255:
  3015  020F  1003               	clrc
  3016  0210  0DF7               	rlf	___awdiv@quotient,f
  3017  0211  0DF8               	rlf	___awdiv@quotient+1,f
  3018  0212  3EFF               	addlw	-1
  3019  0213  1D03               	skipz
  3020  0214  2A0F               	goto	u1255
  3021  0215  0871               	movf	___awdiv@divisor+1,w
  3022  0216  0273               	subwf	___awdiv@dividend+1,w
  3023  0217  1D03               	skipz
  3024  0218  2A1B               	goto	u1265
  3025  0219  0870               	movf	___awdiv@divisor,w
  3026  021A  0272               	subwf	___awdiv@dividend,w
  3027  021B                     u1265:
  3028  021B  1C03               	skipc
  3029  021C  2A1E               	goto	u1261
  3030  021D  2A1F               	goto	u1260
  3031  021E                     u1261:
  3032  021E  2A26               	goto	l1733
  3033  021F                     u1260:
  3034  021F                     l1729:
  3035  021F  0870               	movf	___awdiv@divisor,w
  3036  0220  02F2               	subwf	___awdiv@dividend,f
  3037  0221  0871               	movf	___awdiv@divisor+1,w
  3038  0222  1C03               	skipc
  3039  0223  03F3               	decf	___awdiv@dividend+1,f
  3040  0224  02F3               	subwf	___awdiv@dividend+1,f
  3041  0225                     l1731:
  3042  0225  1477               	bsf	___awdiv@quotient,0
  3043  0226                     l1733:
  3044  0226  3001               	movlw	1
  3045  0227                     u1275:
  3046  0227  1003               	clrc
  3047  0228  0CF1               	rrf	___awdiv@divisor+1,f
  3048  0229  0CF0               	rrf	___awdiv@divisor,f
  3049  022A  3EFF               	addlw	-1
  3050  022B  1D03               	skipz
  3051  022C  2A27               	goto	u1275
  3052  022D                     l1735:
  3053  022D  3001               	movlw	1
  3054  022E  02F5               	subwf	___awdiv@counter,f
  3055  022F  1D03               	btfss	3,2
  3056  0230  2A32               	goto	u1281
  3057  0231  2A33               	goto	u1280
  3058  0232                     u1281:
  3059  0232  2A0E               	goto	l1727
  3060  0233                     u1280:
  3061  0233                     l1737:
  3062  0233  0876               	movf	___awdiv@sign,w
  3063  0234  1903               	btfsc	3,2
  3064  0235  2A37               	goto	u1291
  3065  0236  2A38               	goto	u1290
  3066  0237                     u1291:
  3067  0237  2A3D               	goto	l1741
  3068  0238                     u1290:
  3069  0238                     l1739:
  3070  0238  09F7               	comf	___awdiv@quotient,f
  3071  0239  09F8               	comf	___awdiv@quotient+1,f
  3072  023A  0AF7               	incf	___awdiv@quotient,f
  3073  023B  1903               	skipnz
  3074  023C  0AF8               	incf	___awdiv@quotient+1,f
  3075  023D                     l1741:
  3076  023D  0878               	movf	___awdiv@quotient+1,w
  3077  023E  00F1               	movwf	?___awdiv+1
  3078  023F  0877               	movf	___awdiv@quotient,w
  3079  0240  00F0               	movwf	?___awdiv
  3080  0241                     l534:
  3081  0241  0008               	return
  3082  0242                     __end_of___awdiv:
  3083                           
  3084                           	psect	text14
  3085  02AA                     __ptext14:	
  3086 ;; *************** function _Lcd_Set_Cursor *****************
  3087 ;; Defined at:
  3088 ;;		line 159 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  a               1    wreg     unsigned char 
  3091 ;;  b               1    4[COMMON] unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  a               1    7[COMMON] unsigned char 
  3094 ;;  temp            1   10[COMMON] unsigned char 
  3095 ;;  y               1    9[COMMON] unsigned char 
  3096 ;;  z               1    8[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         1       0       0       0       0
  3107 ;;      Locals:         4       0       0       0       0
  3108 ;;      Temps:          2       0       0       0       0
  3109 ;;      Totals:         7       0       0       0       0
  3110 ;;Total ram usage:        7 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 2
  3113 ;; This function calls:
  3114 ;;		_Lcd_Cmd
  3115 ;; This function is called by:
  3116 ;;		_display_current_time
  3117 ;;		_display_stop_time
  3118 ;;		_display_relay_status
  3119 ;;		_display_current_date
  3120 ;;		_get_controls
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125  02AA                     _Lcd_Set_Cursor:	
  3126                           ;psect for function _Lcd_Set_Cursor
  3127                           
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3131                           ;Lcd_Set_Cursor@a stored from wreg
  3132  02AA  00F7               	movwf	Lcd_Set_Cursor@a
  3133  02AB                     l1615:
  3134                           
  3135                           ;main.c: 159:    _delay((unsigned long)((40)*(20000000/4000.0)));;main.c: 160:    RD2 = 
      +                          0;;main.c: 161: };main.c: 162: 
  3136  02AB  0377               	decf	Lcd_Set_Cursor@a,w
  3137  02AC  1D03               	btfss	3,2
  3138  02AD  2AAF               	goto	u991
  3139  02AE  2AB0               	goto	u990
  3140  02AF                     u991:
  3141  02AF  2AD3               	goto	l1625
  3142  02B0                     u990:
  3143  02B0                     l1617:
  3144                           
  3145                           ;main.c: 163: void Lcd_Print_String(char *a);main.c: 164: {
  3146  02B0  0874               	movf	Lcd_Set_Cursor@b,w
  3147  02B1  3E7F               	addlw	127
  3148  02B2  00F5               	movwf	??_Lcd_Set_Cursor
  3149  02B3  0875               	movf	??_Lcd_Set_Cursor,w
  3150  02B4  00FA               	movwf	Lcd_Set_Cursor@temp
  3151                           
  3152                           ;main.c: 165:     int i;
  3153  02B5  087A               	movf	Lcd_Set_Cursor@temp,w
  3154  02B6  00F5               	movwf	??_Lcd_Set_Cursor
  3155  02B7  3004               	movlw	4
  3156  02B8                     u1005:
  3157  02B8  1003               	clrc
  3158  02B9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3159  02BA  3EFF               	addlw	-1
  3160  02BB  1D03               	skipz
  3161  02BC  2AB8               	goto	u1005
  3162  02BD  0875               	movf	??_Lcd_Set_Cursor,w
  3163  02BE  00F6               	movwf	??_Lcd_Set_Cursor+1
  3164  02BF  0876               	movf	??_Lcd_Set_Cursor+1,w
  3165  02C0  00F8               	movwf	Lcd_Set_Cursor@z
  3166  02C1                     l1619:
  3167                           
  3168                           ;main.c: 166:     for(i=0;a[i]!='\0';i++)
  3169  02C1  087A               	movf	Lcd_Set_Cursor@temp,w
  3170  02C2  390F               	andlw	15
  3171  02C3  00F5               	movwf	??_Lcd_Set_Cursor
  3172  02C4  0875               	movf	??_Lcd_Set_Cursor,w
  3173  02C5  00F9               	movwf	Lcd_Set_Cursor@y
  3174  02C6                     l1621:
  3175                           
  3176                           ;main.c: 167:        Lcd_Print_Char(a[i]);
  3177  02C6  0878               	movf	Lcd_Set_Cursor@z,w
  3178  02C7  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3179  02CC                     l1623:
  3180                           
  3181                           ;main.c: 168: }
  3182  02CC  0879               	movf	Lcd_Set_Cursor@y,w
  3183  02CD  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3184                           
  3185                           ;main.c: 169: 
  3186  02D2  2B4E               	goto	l205
  3187  02D3                     l1625:
  3188  02D3  3002               	movlw	2
  3189  02D4  0677               	xorwf	Lcd_Set_Cursor@a,w
  3190  02D5  1D03               	btfss	3,2
  3191  02D6  2AD8               	goto	u1011
  3192  02D7  2AD9               	goto	u1010
  3193  02D8                     u1011:
  3194  02D8  2AFC               	goto	l1635
  3195  02D9                     u1010:
  3196  02D9                     l1627:
  3197                           
  3198                           ;main.c: 171: void readDataFromEEPROM(unsigned char address){;main.c: 172:     EEADR = a
      +                          ddress;
  3199  02D9  0874               	movf	Lcd_Set_Cursor@b,w
  3200  02DA  3EBF               	addlw	191
  3201  02DB  00F5               	movwf	??_Lcd_Set_Cursor
  3202  02DC  0875               	movf	??_Lcd_Set_Cursor,w
  3203  02DD  00FA               	movwf	Lcd_Set_Cursor@temp
  3204                           
  3205                           ;main.c: 173:     EECON1bits.EEPGD = 0;
  3206  02DE  087A               	movf	Lcd_Set_Cursor@temp,w
  3207  02DF  00F5               	movwf	??_Lcd_Set_Cursor
  3208  02E0  3004               	movlw	4
  3209  02E1                     u1025:
  3210  02E1  1003               	clrc
  3211  02E2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3212  02E3  3EFF               	addlw	-1
  3213  02E4  1D03               	skipz
  3214  02E5  2AE1               	goto	u1025
  3215  02E6  0875               	movf	??_Lcd_Set_Cursor,w
  3216  02E7  00F6               	movwf	??_Lcd_Set_Cursor+1
  3217  02E8  0876               	movf	??_Lcd_Set_Cursor+1,w
  3218  02E9  00F8               	movwf	Lcd_Set_Cursor@z
  3219  02EA                     l1629:
  3220                           
  3221                           ;main.c: 174:     EECON1bits.RD = 1;
  3222  02EA  087A               	movf	Lcd_Set_Cursor@temp,w
  3223  02EB  390F               	andlw	15
  3224  02EC  00F5               	movwf	??_Lcd_Set_Cursor
  3225  02ED  0875               	movf	??_Lcd_Set_Cursor,w
  3226  02EE  00F9               	movwf	Lcd_Set_Cursor@y
  3227  02EF                     l1631:
  3228                           
  3229                           ;main.c: 175:     byte = EEDATA;
  3230  02EF  0878               	movf	Lcd_Set_Cursor@z,w
  3231  02F0  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3232  02F5                     l1633:
  3233                           
  3234                           ;main.c: 176: }
  3235  02F5  0879               	movf	Lcd_Set_Cursor@y,w
  3236  02F6  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3237                           
  3238                           ;main.c: 177: 
  3239  02FB  2B4E               	goto	l205
  3240  02FC                     l1635:
  3241  02FC  3003               	movlw	3
  3242  02FD  0677               	xorwf	Lcd_Set_Cursor@a,w
  3243  02FE  1D03               	btfss	3,2
  3244  02FF  2B01               	goto	u1031
  3245  0300  2B02               	goto	u1030
  3246  0301                     u1031:
  3247  0301  2B25               	goto	l1645
  3248  0302                     u1030:
  3249  0302                     l1637:
  3250                           
  3251                           ;main.c: 178: void writeDataToEEPROM(unsigned char data, unsigned char address){;main.c:
      +                           179:     EEADR = address;
  3252  0302  0874               	movf	Lcd_Set_Cursor@b,w
  3253  0303  3E93               	addlw	147
  3254  0304  00F5               	movwf	??_Lcd_Set_Cursor
  3255  0305  0875               	movf	??_Lcd_Set_Cursor,w
  3256  0306  00FA               	movwf	Lcd_Set_Cursor@temp
  3257                           
  3258                           ;main.c: 180:     EEDATA = data;
  3259  0307  087A               	movf	Lcd_Set_Cursor@temp,w
  3260  0308  00F5               	movwf	??_Lcd_Set_Cursor
  3261  0309  3004               	movlw	4
  3262  030A                     u1045:
  3263  030A  1003               	clrc
  3264  030B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3265  030C  3EFF               	addlw	-1
  3266  030D  1D03               	skipz
  3267  030E  2B0A               	goto	u1045
  3268  030F  0875               	movf	??_Lcd_Set_Cursor,w
  3269  0310  00F6               	movwf	??_Lcd_Set_Cursor+1
  3270  0311  0876               	movf	??_Lcd_Set_Cursor+1,w
  3271  0312  00F8               	movwf	Lcd_Set_Cursor@z
  3272  0313                     l1639:
  3273                           
  3274                           ;main.c: 181:     EECON1bits.EEPGD = 0;
  3275  0313  087A               	movf	Lcd_Set_Cursor@temp,w
  3276  0314  390F               	andlw	15
  3277  0315  00F5               	movwf	??_Lcd_Set_Cursor
  3278  0316  0875               	movf	??_Lcd_Set_Cursor,w
  3279  0317  00F9               	movwf	Lcd_Set_Cursor@y
  3280  0318                     l1641:
  3281                           
  3282                           ;main.c: 182:     EECON1bits.WREN = 1;
  3283  0318  0878               	movf	Lcd_Set_Cursor@z,w
  3284  0319  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3285  031E                     l1643:
  3286                           
  3287                           ;main.c: 183:     EECON2 = 0x55;
  3288  031E  0879               	movf	Lcd_Set_Cursor@y,w
  3289  031F  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3290                           
  3291                           ;main.c: 184:     EECON2 = 0xAA;
  3292  0324  2B4E               	goto	l205
  3293  0325                     l1645:
  3294  0325  3004               	movlw	4
  3295  0326  0677               	xorwf	Lcd_Set_Cursor@a,w
  3296  0327  1D03               	btfss	3,2
  3297  0328  2B2A               	goto	u1051
  3298  0329  2B2B               	goto	u1050
  3299  032A                     u1051:
  3300  032A  2B4E               	goto	l201
  3301  032B                     u1050:
  3302  032B                     l1647:
  3303                           
  3304                           ;main.c: 185:     EECON1bits.WR = 1;;main.c: 186:     while(PIR2bits.EEIF==0);
  3305  032B  0874               	movf	Lcd_Set_Cursor@b,w
  3306  032C  3ED3               	addlw	211
  3307  032D  00F5               	movwf	??_Lcd_Set_Cursor
  3308  032E  0875               	movf	??_Lcd_Set_Cursor,w
  3309  032F  00FA               	movwf	Lcd_Set_Cursor@temp
  3310                           
  3311                           ;main.c: 187:     PIR2bits.EEIF=0;
  3312  0330  087A               	movf	Lcd_Set_Cursor@temp,w
  3313  0331  00F5               	movwf	??_Lcd_Set_Cursor
  3314  0332  3004               	movlw	4
  3315  0333                     u1065:
  3316  0333  1003               	clrc
  3317  0334  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3318  0335  3EFF               	addlw	-1
  3319  0336  1D03               	skipz
  3320  0337  2B33               	goto	u1065
  3321  0338  0875               	movf	??_Lcd_Set_Cursor,w
  3322  0339  00F6               	movwf	??_Lcd_Set_Cursor+1
  3323  033A  0876               	movf	??_Lcd_Set_Cursor+1,w
  3324  033B  00F8               	movwf	Lcd_Set_Cursor@z
  3325  033C                     l1649:
  3326                           
  3327                           ;main.c: 188: }
  3328  033C  087A               	movf	Lcd_Set_Cursor@temp,w
  3329  033D  390F               	andlw	15
  3330  033E  00F5               	movwf	??_Lcd_Set_Cursor
  3331  033F  0875               	movf	??_Lcd_Set_Cursor,w
  3332  0340  00F9               	movwf	Lcd_Set_Cursor@y
  3333  0341                     l1651:
  3334                           
  3335                           ;main.c: 189: 
  3336  0341  0878               	movf	Lcd_Set_Cursor@z,w
  3337  0342  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3338  0347                     l1653:
  3339                           
  3340                           ;main.c: 190: void display_current_time(){
  3341  0347  0879               	movf	Lcd_Set_Cursor@y,w
  3342  0348  120A  158A  2687  120A  118A  	fcall	_Lcd_Cmd
  3343  034D  2B4E               	goto	l205
  3344  034E                     l201:
  3345  034E                     l205:
  3346  034E  0008               	return
  3347  034F                     __end_of_Lcd_Set_Cursor:
  3348                           
  3349                           	psect	text15
  3350  0E87                     __ptext15:	
  3351 ;; *************** function _Lcd_Cmd *****************
  3352 ;; Defined at:
  3353 ;;		line 150 in file "main.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  a               1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  a               1    3[COMMON] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0
  3369 ;;      Temps:          2       0       0       0       0
  3370 ;;      Totals:         3       0       0       0       0
  3371 ;;Total ram usage:        3 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 1
  3374 ;; This function calls:
  3375 ;;		_Lcd_SetBit
  3376 ;; This function is called by:
  3377 ;;		_Lcd_Set_Cursor
  3378 ;;		_Lcd_Start
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382  0E87                     _Lcd_Cmd:	
  3383                           ;psect for function _Lcd_Cmd
  3384                           
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3388                           ;Lcd_Cmd@a stored from wreg
  3389  0E87  00F3               	movwf	Lcd_Cmd@a
  3390  0E88                     l1515:
  3391                           
  3392                           ;main.c: 150:    Lower_Nibble = data&0x0F;;main.c: 151:    Upper_Nibble = data&0xF0;;mai
      +                          n.c: 152:    RD0 = 1;
  3393  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0E8A  1008               	bcf	8,0	;volatile
  3396  0E8B                     l1517:
  3397                           
  3398                           ;main.c: 153:    Lcd_SetBit(Upper_Nibble>>4);
  3399  0E8B  0873               	movf	Lcd_Cmd@a,w
  3400  0E8C  120A  158A  26E0  120A  158A  	fcall	_Lcd_SetBit
  3401  0E91                     l1519:
  3402                           
  3403                           ;main.c: 154:    RD2 = 1;
  3404  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0E93  1508               	bsf	8,2	;volatile
  3407  0E94                     l1521:
  3408                           
  3409                           ;main.c: 155:    _delay((unsigned long)((40)*(20000000/4000.0)));
  3410  0E94  301A               	movlw	26
  3411  0E95  00F2               	movwf	??_Lcd_Cmd+1
  3412  0E96  30F8               	movlw	248
  3413  0E97  00F1               	movwf	??_Lcd_Cmd
  3414  0E98                     u1757:
  3415  0E98  0BF1               	decfsz	??_Lcd_Cmd,f
  3416  0E99  2E98               	goto	u1757
  3417  0E9A  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3418  0E9B  2E98               	goto	u1757
  3419  0E9C  0000               	nop
  3420  0E9D                     l1523:
  3421                           
  3422                           ;main.c: 156:    RD2 = 0;
  3423  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0E9F  1108               	bcf	8,2	;volatile
  3426  0EA0                     l195:
  3427  0EA0  0008               	return
  3428  0EA1                     __end_of_Lcd_Cmd:
  3429                           
  3430                           	psect	text16
  3431  008E                     __ptext16:	
  3432 ;; *************** function _Lcd_Print_Char *****************
  3433 ;; Defined at:
  3434 ;;		line 216 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  data            1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  data            1    6[COMMON] unsigned char 
  3439 ;;  Upper_Nibble    1    5[COMMON] unsigned char 
  3440 ;;  Lower_Nibble    1    4[COMMON] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3450 ;;      Params:         0       0       0       0       0
  3451 ;;      Locals:         3       0       0       0       0
  3452 ;;      Temps:          3       0       0       0       0
  3453 ;;      Totals:         6       0       0       0       0
  3454 ;;Total ram usage:        6 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 1
  3457 ;; This function calls:
  3458 ;;		_Lcd_SetBit
  3459 ;; This function is called by:
  3460 ;;		_Lcd_Print_String
  3461 ;;		_display_current_time
  3462 ;;		_display_stop_time
  3463 ;;		_display_current_date
  3464 ;;		_get_controls
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468  008E                     _Lcd_Print_Char:	
  3469                           ;psect for function _Lcd_Print_Char
  3470                           
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  3474                           ;Lcd_Print_Char@data stored from wreg
  3475  008E  00F6               	movwf	Lcd_Print_Char@data
  3476  008F                     l1525:
  3477                           
  3478                           ;main.c: 216:         Lcd_Print_Char(alarm_val[1] + '0');;main.c: 217:         Lcd_Print
      +                          _Char(':');;main.c: 218:         Lcd_Print_Char(alarm_val[2] + '0');;main.c: 219:       
      +                            Lcd_Print_Char(alarm_val[3] + '0');
  3479  008F  0876               	movf	Lcd_Print_Char@data,w
  3480  0090  390F               	andlw	15
  3481  0091  00F1               	movwf	??_Lcd_Print_Char
  3482  0092  0871               	movf	??_Lcd_Print_Char,w
  3483  0093  00F4               	movwf	Lcd_Print_Char@Lower_Nibble
  3484                           
  3485                           ;main.c: 220:         Lcd_Print_Char(':');
  3486  0094  0876               	movf	Lcd_Print_Char@data,w
  3487  0095  39F0               	andlw	240
  3488  0096  00F1               	movwf	??_Lcd_Print_Char
  3489  0097  0871               	movf	??_Lcd_Print_Char,w
  3490  0098  00F5               	movwf	Lcd_Print_Char@Upper_Nibble
  3491  0099                     l1527:
  3492                           
  3493                           ;main.c: 221:         Lcd_Print_Char('0');
  3494  0099  1283               	bcf	3,5	;RP0=0, select bank0
  3495  009A  1303               	bcf	3,6	;RP1=0, select bank0
  3496  009B  1408               	bsf	8,0	;volatile
  3497  009C                     l1529:
  3498                           
  3499                           ;main.c: 222:         Lcd_Print_Char('0');
  3500  009C  0875               	movf	Lcd_Print_Char@Upper_Nibble,w
  3501  009D  00F1               	movwf	??_Lcd_Print_Char
  3502  009E  3004               	movlw	4
  3503  009F                     u915:
  3504  009F  1003               	clrc
  3505  00A0  0CF1               	rrf	??_Lcd_Print_Char,f
  3506  00A1  3EFF               	addlw	-1
  3507  00A2  1D03               	skipz
  3508  00A3  289F               	goto	u915
  3509  00A4  0871               	movf	??_Lcd_Print_Char,w
  3510  00A5  120A  158A  26E0  120A  118A  	fcall	_Lcd_SetBit
  3511  00AA                     l1531:
  3512                           
  3513                           ;main.c: 223:         _delay((unsigned long)((50)*(20000000/4000.0)));
  3514  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  3515  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  3516  00AC  1508               	bsf	8,2	;volatile
  3517  00AD                     l1533:
  3518                           
  3519                           ;main.c: 224: }
  3520  00AD  3002               	movlw	2
  3521  00AE  00F3               	movwf	??_Lcd_Print_Char+2
  3522  00AF  3004               	movlw	4
  3523  00B0  00F2               	movwf	??_Lcd_Print_Char+1
  3524  00B1  30BA               	movlw	186
  3525  00B2  00F1               	movwf	??_Lcd_Print_Char
  3526  00B3                     u1767:
  3527  00B3  0BF1               	decfsz	??_Lcd_Print_Char,f
  3528  00B4  28B3               	goto	u1767
  3529  00B5  0BF2               	decfsz	??_Lcd_Print_Char+1,f
  3530  00B6  28B3               	goto	u1767
  3531  00B7  0BF3               	decfsz	??_Lcd_Print_Char+2,f
  3532  00B8  28B3               	goto	u1767
  3533  00B9  0000               	nop
  3534  00BA                     l1535:
  3535                           
  3536                           ;main.c: 225: 
  3537  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  3538  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  3539  00BC  1108               	bcf	8,2	;volatile
  3540  00BD                     l1537:
  3541                           
  3542                           ;main.c: 226: void display_relay_status(){
  3543  00BD  0874               	movf	Lcd_Print_Char@Lower_Nibble,w
  3544  00BE  120A  158A  26E0  120A  118A  	fcall	_Lcd_SetBit
  3545  00C3                     l1539:
  3546                           
  3547                           ;main.c: 227:      Lcd_Set_Cursor(4, 1);
  3548  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  3549  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  3550  00C5  1508               	bsf	8,2	;volatile
  3551  00C6                     l1541:
  3552                           
  3553                           ;main.c: 228:      Lcd_Print_String("Relay status: ");
  3554  00C6  3002               	movlw	2
  3555  00C7  00F3               	movwf	??_Lcd_Print_Char+2
  3556  00C8  3004               	movlw	4
  3557  00C9  00F2               	movwf	??_Lcd_Print_Char+1
  3558  00CA  30BA               	movlw	186
  3559  00CB  00F1               	movwf	??_Lcd_Print_Char
  3560  00CC                     u1777:
  3561  00CC  0BF1               	decfsz	??_Lcd_Print_Char,f
  3562  00CD  28CC               	goto	u1777
  3563  00CE  0BF2               	decfsz	??_Lcd_Print_Char+1,f
  3564  00CF  28CC               	goto	u1777
  3565  00D0  0BF3               	decfsz	??_Lcd_Print_Char+2,f
  3566  00D1  28CC               	goto	u1777
  3567  00D2  0000               	nop
  3568  00D3                     l1543:
  3569                           
  3570                           ;main.c: 229: }
  3571  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  3572  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  3573  00D5  1108               	bcf	8,2	;volatile
  3574  00D6                     l216:
  3575  00D6  0008               	return
  3576  00D7                     __end_of_Lcd_Print_Char:
  3577                           
  3578                           	psect	text17
  3579  0EE0                     __ptext17:	
  3580 ;; *************** function _Lcd_SetBit *****************
  3581 ;; Defined at:
  3582 ;;		line 127 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  data_bit        1    wreg     unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  data_bit        1    0[COMMON] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         1       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         1       0       0       0       0
  3600 ;;Total ram usage:        1 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_Lcd_Cmd
  3606 ;;		_Lcd_Print_Char
  3607 ;;		_Lcd_Start
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611  0EE0                     _Lcd_SetBit:	
  3612                           ;psect for function _Lcd_SetBit
  3613                           
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _Lcd_SetBit: [wreg]
  3617                           ;Lcd_SetBit@data_bit stored from wreg
  3618  0EE0  00F0               	movwf	Lcd_SetBit@data_bit
  3619  0EE1                     l1499:
  3620                           
  3621                           ;main.c: 127: {;main.c: 128:   Lcd_SetBit(0x00);;main.c: 129:   for(int i=1065244; i<=0;
      +                           i--) __nop();
  3622  0EE1  1C70               	btfss	Lcd_SetBit@data_bit,0
  3623  0EE2  2EE4               	goto	u851
  3624  0EE3  2EE5               	goto	u850
  3625  0EE4                     u851:
  3626  0EE4  2EE9               	goto	l184
  3627  0EE5                     u850:
  3628  0EE5                     l1501:
  3629                           
  3630                           ;main.c: 130:   Lcd_Cmd(0x03);
  3631  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0EE7  1608               	bsf	8,4	;volatile
  3634  0EE8  2EEC               	goto	l185
  3635  0EE9                     l184:	
  3636                           ;main.c: 131:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3637                           
  3638                           
  3639                           ;main.c: 132:   Lcd_Cmd(0x03);
  3640  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0EEB  1208               	bcf	8,4	;volatile
  3643  0EEC                     l185:
  3644                           
  3645                           ;main.c: 134:   Lcd_Cmd(0x03);
  3646  0EEC  1CF0               	btfss	Lcd_SetBit@data_bit,1
  3647  0EED  2EEF               	goto	u861
  3648  0EEE  2EF0               	goto	u860
  3649  0EEF                     u861:
  3650  0EEF  2EF2               	goto	l186
  3651  0EF0                     u860:
  3652  0EF0                     l1503:
  3653                           
  3654                           ;main.c: 135:   Lcd_Cmd(0x02);
  3655  0EF0  1688               	bsf	8,5	;volatile
  3656  0EF1  2EF3               	goto	l187
  3657  0EF2                     l186:	
  3658                           ;main.c: 136:   Lcd_Cmd(0x02);
  3659                           
  3660                           
  3661                           ;main.c: 137:   Lcd_Cmd(0x08);
  3662  0EF2  1288               	bcf	8,5	;volatile
  3663  0EF3                     l187:
  3664                           
  3665                           ;main.c: 139:   Lcd_Cmd(0x0C);
  3666  0EF3  1D70               	btfss	Lcd_SetBit@data_bit,2
  3667  0EF4  2EF6               	goto	u871
  3668  0EF5  2EF7               	goto	u870
  3669  0EF6                     u871:
  3670  0EF6  2EF9               	goto	l188
  3671  0EF7                     u870:
  3672  0EF7                     l1505:
  3673                           
  3674                           ;main.c: 140:   Lcd_Cmd(0x00);
  3675  0EF7  1708               	bsf	8,6	;volatile
  3676  0EF8  2EFA               	goto	l189
  3677  0EF9                     l188:	
  3678                           ;main.c: 141:   Lcd_Cmd(0x06);
  3679                           
  3680                           
  3681                           ;main.c: 142: }
  3682  0EF9  1308               	bcf	8,6	;volatile
  3683  0EFA                     l189:
  3684                           
  3685                           ;main.c: 144: void lcd_clear(){
  3686  0EFA  1DF0               	btfss	Lcd_SetBit@data_bit,3
  3687  0EFB  2EFD               	goto	u881
  3688  0EFC  2EFE               	goto	u880
  3689  0EFD                     u881:
  3690  0EFD  2F00               	goto	l190
  3691  0EFE                     u880:
  3692  0EFE                     l1507:
  3693                           
  3694                           ;main.c: 145:     lcd_cmd(0x01);
  3695  0EFE  1788               	bsf	8,7	;volatile
  3696  0EFF  2F01               	goto	l192
  3697  0F00                     l190:	
  3698                           ;main.c: 146: }
  3699                           
  3700                           
  3701                           ;main.c: 147: void Lcd_Print_Char(char data)
  3702  0F00  1388               	bcf	8,7	;volatile
  3703  0F01                     l192:
  3704  0F01  0008               	return
  3705  0F02                     __end_of_Lcd_SetBit:
  3706                           
  3707                           	psect	text18
  3708  0E72                     __ptext18:	
  3709 ;; *************** function ___bmul *****************
  3710 ;; Defined at:
  3711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  multiplier      1    wreg     unsigned char 
  3714 ;;  multiplicand    1    0[COMMON] unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  multiplier      1    3[COMMON] unsigned char 
  3717 ;;  product         1    2[COMMON] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3727 ;;      Params:         1       0       0       0       0
  3728 ;;      Locals:         2       0       0       0       0
  3729 ;;      Temps:          1       0       0       0       0
  3730 ;;      Totals:         4       0       0       0       0
  3731 ;;Total ram usage:        4 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740  0E72                     ___bmul:	
  3741                           ;psect for function ___bmul
  3742                           
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3746                           ;___bmul@multiplier stored from wreg
  3747  0E72  00F3               	movwf	___bmul@multiplier
  3748  0E73                     l1959:
  3749  0E73  01F2               	clrf	___bmul@product
  3750  0E74                     l1961:
  3751  0E74  1C73               	btfss	___bmul@multiplier,0
  3752  0E75  2E77               	goto	u1641
  3753  0E76  2E78               	goto	u1640
  3754  0E77                     u1641:
  3755  0E77  2E7C               	goto	l1965
  3756  0E78                     u1640:
  3757  0E78                     l1963:
  3758  0E78  0870               	movf	___bmul@multiplicand,w
  3759  0E79  00F1               	movwf	??___bmul
  3760  0E7A  0871               	movf	??___bmul,w
  3761  0E7B  07F2               	addwf	___bmul@product,f
  3762  0E7C                     l1965:
  3763  0E7C  1003               	clrc
  3764  0E7D  0DF0               	rlf	___bmul@multiplicand,f
  3765  0E7E                     l1967:
  3766  0E7E  1003               	clrc
  3767  0E7F  0CF3               	rrf	___bmul@multiplier,f
  3768  0E80  0873               	movf	___bmul@multiplier,w
  3769  0E81  1D03               	btfss	3,2
  3770  0E82  2E84               	goto	u1651
  3771  0E83  2E85               	goto	u1650
  3772  0E84                     u1651:
  3773  0E84  2E74               	goto	l1961
  3774  0E85                     u1650:
  3775  0E85                     l1969:
  3776  0E85  0872               	movf	___bmul@product,w
  3777  0E86                     l407:
  3778  0E86  0008               	return
  3779  0E87                     __end_of___bmul:
  3780                           
  3781                           	psect	text19
  3782  04D5                     __ptext19:	
  3783 ;; *************** function _Update_Current_Date_Time *****************
  3784 ;; Defined at:
  3785 ;;		line 41 in file "./PIC16F877a_DS3231.h"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, pclath, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 2
  3806 ;; This function calls:
  3807 ;;		_BCD_2_DEC
  3808 ;;		_I2C_Begin
  3809 ;;		_I2C_End
  3810 ;;		_I2C_Read
  3811 ;;		_I2C_Write
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817  04D5                     _Update_Current_Date_Time:	
  3818                           ;psect for function _Update_Current_Date_Time
  3819                           
  3820  04D5                     l1797:	
  3821                           ;incstack = 0
  3822                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  3823                           
  3824                           
  3825                           ;./PIC16F877a_DS3231.h: 44:    I2C_Begin();
  3826  04D5  120A  158A  261C  120A  118A  	fcall	_I2C_Begin
  3827                           
  3828                           ;./PIC16F877a_DS3231.h: 45:    I2C_Write(0xD0);
  3829  04DA  30D0               	movlw	208
  3830  04DB  00F0               	movwf	I2C_Write@data
  3831  04DC  3000               	movlw	0
  3832  04DD  00F1               	movwf	I2C_Write@data+1
  3833  04DE  120A  158A  262E  120A  118A  	fcall	_I2C_Write
  3834                           
  3835                           ;./PIC16F877a_DS3231.h: 46:    I2C_Write(0);
  3836  04E3  3000               	movlw	0
  3837  04E4  00F0               	movwf	I2C_Write@data
  3838  04E5  00F1               	movwf	I2C_Write@data+1
  3839  04E6  120A  158A  262E  120A  118A  	fcall	_I2C_Write
  3840                           
  3841                           ;./PIC16F877a_DS3231.h: 47:    I2C_End();
  3842  04EB  120A  158A  2625  120A  118A  	fcall	_I2C_End
  3843                           
  3844                           ;./PIC16F877a_DS3231.h: 50:    I2C_Begin();
  3845  04F0  120A  158A  261C  120A  118A  	fcall	_I2C_Begin
  3846                           
  3847                           ;./PIC16F877a_DS3231.h: 51:    I2C_Write(0xD1);
  3848  04F5  30D1               	movlw	209
  3849  04F6  00F0               	movwf	I2C_Write@data
  3850  04F7  3000               	movlw	0
  3851  04F8  00F1               	movwf	I2C_Write@data+1
  3852  04F9  120A  158A  262E  120A  118A  	fcall	_I2C_Write
  3853                           
  3854                           ;./PIC16F877a_DS3231.h: 52:    sec = BCD_2_DEC(I2C_Read(1));
  3855  04FE  3001               	movlw	1
  3856  04FF  00F0               	movwf	I2C_Read@ack
  3857  0500  3000               	movlw	0
  3858  0501  00F1               	movwf	I2C_Read@ack+1
  3859  0502  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3860  0507  0871               	movf	?_I2C_Read+1,w
  3861  0508  00F7               	movwf	BCD_2_DEC@to_convert+1
  3862  0509  0870               	movf	?_I2C_Read,w
  3863  050A  00F6               	movwf	BCD_2_DEC@to_convert
  3864  050B  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3865  0510  0877               	movf	?_BCD_2_DEC+1,w
  3866  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0513  00CC               	movwf	_sec+1
  3869  0514  0876               	movf	?_BCD_2_DEC,w
  3870  0515  00CB               	movwf	_sec
  3871                           
  3872                           ;./PIC16F877a_DS3231.h: 53:    min = BCD_2_DEC(I2C_Read(1));
  3873  0516  3001               	movlw	1
  3874  0517  00F0               	movwf	I2C_Read@ack
  3875  0518  3000               	movlw	0
  3876  0519  00F1               	movwf	I2C_Read@ack+1
  3877  051A  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3878  051F  0871               	movf	?_I2C_Read+1,w
  3879  0520  00F7               	movwf	BCD_2_DEC@to_convert+1
  3880  0521  0870               	movf	?_I2C_Read,w
  3881  0522  00F6               	movwf	BCD_2_DEC@to_convert
  3882  0523  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3883  0528  0877               	movf	?_BCD_2_DEC+1,w
  3884  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3885  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3886  052B  00E4               	movwf	_min+1
  3887  052C  0876               	movf	?_BCD_2_DEC,w
  3888  052D  00E3               	movwf	_min
  3889                           
  3890                           ;./PIC16F877a_DS3231.h: 54:    hour = BCD_2_DEC(I2C_Read(1));
  3891  052E  3001               	movlw	1
  3892  052F  00F0               	movwf	I2C_Read@ack
  3893  0530  3000               	movlw	0
  3894  0531  00F1               	movwf	I2C_Read@ack+1
  3895  0532  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3896  0537  0871               	movf	?_I2C_Read+1,w
  3897  0538  00F7               	movwf	BCD_2_DEC@to_convert+1
  3898  0539  0870               	movf	?_I2C_Read,w
  3899  053A  00F6               	movwf	BCD_2_DEC@to_convert
  3900  053B  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3901  0540  0877               	movf	?_BCD_2_DEC+1,w
  3902  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3904  0543  00E2               	movwf	_hour+1
  3905  0544  0876               	movf	?_BCD_2_DEC,w
  3906  0545  00E1               	movwf	_hour
  3907                           
  3908                           ;./PIC16F877a_DS3231.h: 55:    I2C_Read(1);
  3909  0546  3001               	movlw	1
  3910  0547  00F0               	movwf	I2C_Read@ack
  3911  0548  3000               	movlw	0
  3912  0549  00F1               	movwf	I2C_Read@ack+1
  3913  054A  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3914                           
  3915                           ;./PIC16F877a_DS3231.h: 56:    day = BCD_2_DEC(I2C_Read(1));
  3916  054F  3001               	movlw	1
  3917  0550  00F0               	movwf	I2C_Read@ack
  3918  0551  3000               	movlw	0
  3919  0552  00F1               	movwf	I2C_Read@ack+1
  3920  0553  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3921  0558  0871               	movf	?_I2C_Read+1,w
  3922  0559  00F7               	movwf	BCD_2_DEC@to_convert+1
  3923  055A  0870               	movf	?_I2C_Read,w
  3924  055B  00F6               	movwf	BCD_2_DEC@to_convert
  3925  055C  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3926  0561  0877               	movf	?_BCD_2_DEC+1,w
  3927  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3929  0564  00E0               	movwf	_day+1
  3930  0565  0876               	movf	?_BCD_2_DEC,w
  3931  0566  00DF               	movwf	_day
  3932                           
  3933                           ;./PIC16F877a_DS3231.h: 57:    month = BCD_2_DEC(I2C_Read(1));
  3934  0567  3001               	movlw	1
  3935  0568  00F0               	movwf	I2C_Read@ack
  3936  0569  3000               	movlw	0
  3937  056A  00F1               	movwf	I2C_Read@ack+1
  3938  056B  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3939  0570  0871               	movf	?_I2C_Read+1,w
  3940  0571  00F7               	movwf	BCD_2_DEC@to_convert+1
  3941  0572  0870               	movf	?_I2C_Read,w
  3942  0573  00F6               	movwf	BCD_2_DEC@to_convert
  3943  0574  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3944  0579  0877               	movf	?_BCD_2_DEC+1,w
  3945  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3946  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3947  057C  00DE               	movwf	_month+1
  3948  057D  0876               	movf	?_BCD_2_DEC,w
  3949  057E  00DD               	movwf	_month
  3950                           
  3951                           ;./PIC16F877a_DS3231.h: 58:    year = BCD_2_DEC(I2C_Read(1));
  3952  057F  3001               	movlw	1
  3953  0580  00F0               	movwf	I2C_Read@ack
  3954  0581  3000               	movlw	0
  3955  0582  00F1               	movwf	I2C_Read@ack+1
  3956  0583  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3957  0588  0871               	movf	?_I2C_Read+1,w
  3958  0589  00F7               	movwf	BCD_2_DEC@to_convert+1
  3959  058A  0870               	movf	?_I2C_Read,w
  3960  058B  00F6               	movwf	BCD_2_DEC@to_convert
  3961  058C  120A  158A  2727  120A  118A  	fcall	_BCD_2_DEC
  3962  0591  0877               	movf	?_BCD_2_DEC+1,w
  3963  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0593  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0594  00DC               	movwf	_year+1
  3966  0595  0876               	movf	?_BCD_2_DEC,w
  3967  0596  00DB               	movwf	_year
  3968                           
  3969                           ;./PIC16F877a_DS3231.h: 59:    I2C_End();
  3970  0597  120A  158A  2625  120A  118A  	fcall	_I2C_End
  3971                           
  3972                           ;./PIC16F877a_DS3231.h: 62:     I2C_Begin();
  3973  059C  120A  158A  261C  120A  118A  	fcall	_I2C_Begin
  3974                           
  3975                           ;./PIC16F877a_DS3231.h: 63:     I2C_Write(0xD1);
  3976  05A1  30D1               	movlw	209
  3977  05A2  00F0               	movwf	I2C_Write@data
  3978  05A3  3000               	movlw	0
  3979  05A4  00F1               	movwf	I2C_Write@data+1
  3980  05A5  120A  158A  262E  120A  118A  	fcall	_I2C_Write
  3981                           
  3982                           ;./PIC16F877a_DS3231.h: 64:     I2C_Read(1);
  3983  05AA  3001               	movlw	1
  3984  05AB  00F0               	movwf	I2C_Read@ack
  3985  05AC  3000               	movlw	0
  3986  05AD  00F1               	movwf	I2C_Read@ack+1
  3987  05AE  120A  158A  2771  120A  118A  	fcall	_I2C_Read
  3988                           
  3989                           ;./PIC16F877a_DS3231.h: 65:     I2C_End();
  3990  05B3  120A  158A  2625  120A  118A  	fcall	_I2C_End
  3991  05B8                     l161:
  3992  05B8  0008               	return
  3993  05B9                     __end_of_Update_Current_Date_Time:
  3994                           
  3995                           	psect	text20
  3996  0E2E                     __ptext20:	
  3997 ;; *************** function _I2C_Write *****************
  3998 ;; Defined at:
  3999 ;;		line 42 in file "./PIC16F877a_I2C.h"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  data            2    0[COMMON] unsigned int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, pclath, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         2       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 1
  4020 ;; This function calls:
  4021 ;;		_I2C_Hold
  4022 ;; This function is called by:
  4023 ;;		_Update_Current_Date_Time
  4024 ;;		_Set_Time_Date
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028  0E2E                     _I2C_Write:	
  4029                           ;psect for function _I2C_Write
  4030                           
  4031  0E2E                     l1567:	
  4032                           ;incstack = 0
  4033                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4034                           
  4035                           
  4036                           ;./PIC16F877a_I2C.h: 42: void I2C_Write(unsigned data);./PIC16F877a_I2C.h: 43: {;./PIC16
      +                          F877a_I2C.h: 44:   I2C_Hold();
  4037  0E2E  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4038  0E33                     l1569:
  4039                           
  4040                           ;./PIC16F877a_I2C.h: 45:   SSPBUF = data;
  4041  0E33  0870               	movf	I2C_Write@data,w
  4042  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0E36  0093               	movwf	19	;volatile
  4045  0E37                     l146:
  4046  0E37  0008               	return
  4047  0E38                     __end_of_I2C_Write:
  4048                           
  4049                           	psect	text21
  4050  0F71                     __ptext21:	
  4051 ;; *************** function _I2C_Read *****************
  4052 ;; Defined at:
  4053 ;;		line 48 in file "./PIC16F877a_I2C.h"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  ack             2    0[COMMON] unsigned short 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  incoming        2    4[COMMON] unsigned short 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    0[COMMON] unsigned short 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         2       0       0       0       0
  4068 ;;      Locals:         2       0       0       0       0
  4069 ;;      Temps:          2       0       0       0       0
  4070 ;;      Totals:         6       0       0       0       0
  4071 ;;Total ram usage:        6 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 1
  4074 ;; This function calls:
  4075 ;;		_I2C_Hold
  4076 ;; This function is called by:
  4077 ;;		_Update_Current_Date_Time
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081  0F71                     _I2C_Read:	
  4082                           ;psect for function _I2C_Read
  4083                           
  4084  0F71                     l1571:	
  4085                           ;incstack = 0
  4086                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  4087                           
  4088                           
  4089                           ;./PIC16F877a_I2C.h: 48: unsigned short I2C_Read(unsigned short ack);./PIC16F877a_I2C.h:
      +                           49: {;./PIC16F877a_I2C.h: 50:   unsigned short incoming;;./PIC16F877a_I2C.h: 51:   I2C_
      +                          Hold();
  4090  0F71  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4091  0F76                     l1573:
  4092                           
  4093                           ;./PIC16F877a_I2C.h: 52:   RCEN = 1;
  4094  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  4095  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  4096  0F78  1591               	bsf	17,3	;volatile
  4097                           
  4098                           ;./PIC16F877a_I2C.h: 54:   I2C_Hold();
  4099  0F79  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4100  0F7E                     l1575:
  4101                           
  4102                           ;./PIC16F877a_I2C.h: 55:   incoming = SSPBUF;
  4103  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0F80  0813               	movf	19,w	;volatile
  4106  0F81  00F2               	movwf	??_I2C_Read
  4107  0F82  01F3               	clrf	??_I2C_Read+1
  4108  0F83  0872               	movf	??_I2C_Read,w
  4109  0F84  00F4               	movwf	I2C_Read@incoming
  4110  0F85  0873               	movf	??_I2C_Read+1,w
  4111  0F86  00F5               	movwf	I2C_Read@incoming+1
  4112  0F87                     l1577:
  4113                           
  4114                           ;./PIC16F877a_I2C.h: 57:   I2C_Hold();
  4115  0F87  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4116  0F8C                     l1579:
  4117                           
  4118                           ;./PIC16F877a_I2C.h: 58:   ACKDT = (ack)?0:1;
  4119  0F8C  0870               	movf	I2C_Read@ack,w
  4120  0F8D  0471               	iorwf	I2C_Read@ack+1,w
  4121  0F8E  1903               	btfsc	3,2
  4122  0F8F  2F91               	goto	u961
  4123  0F90  2F95               	goto	u960
  4124  0F91                     u961:
  4125  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  4126  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  4127  0F93  1691               	bsf	17,5	;volatile
  4128  0F94  2F98               	goto	u974
  4129  0F95                     u960:
  4130  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  4131  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  4132  0F97  1291               	bcf	17,5	;volatile
  4133  0F98                     u974:
  4134  0F98                     l1581:
  4135                           
  4136                           ;./PIC16F877a_I2C.h: 59:   ACKEN = 1;
  4137  0F98  1611               	bsf	17,4	;volatile
  4138  0F99                     l1583:
  4139                           
  4140                           ;./PIC16F877a_I2C.h: 61:   return incoming;
  4141  0F99  0875               	movf	I2C_Read@incoming+1,w
  4142  0F9A  00F1               	movwf	?_I2C_Read+1
  4143  0F9B  0874               	movf	I2C_Read@incoming,w
  4144  0F9C  00F0               	movwf	?_I2C_Read
  4145  0F9D                     l149:
  4146  0F9D  0008               	return
  4147  0F9E                     __end_of_I2C_Read:
  4148                           
  4149                           	psect	text22
  4150  0E25                     __ptext22:	
  4151 ;; *************** function _I2C_End *****************
  4152 ;; Defined at:
  4153 ;;		line 36 in file "./PIC16F877a_I2C.h"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4167 ;;      Params:         0       0       0       0       0
  4168 ;;      Locals:         0       0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0
  4170 ;;      Totals:         0       0       0       0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; Hardware stack levels required when called: 1
  4174 ;; This function calls:
  4175 ;;		_I2C_Hold
  4176 ;; This function is called by:
  4177 ;;		_Update_Current_Date_Time
  4178 ;;		_Set_Time_Date
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182  0E25                     _I2C_End:	
  4183                           ;psect for function _I2C_End
  4184                           
  4185  0E25                     l1563:	
  4186                           ;incstack = 0
  4187                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  4188                           
  4189                           
  4190                           ;./PIC16F877a_I2C.h: 38:   I2C_Hold();
  4191  0E25  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4192  0E2A                     l1565:
  4193                           
  4194                           ;./PIC16F877a_I2C.h: 39:   PEN = 1;
  4195  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  4196  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  4197  0E2C  1511               	bsf	17,2	;volatile
  4198  0E2D                     l143:
  4199  0E2D  0008               	return
  4200  0E2E                     __end_of_I2C_End:
  4201                           
  4202                           	psect	text23
  4203  0E1C                     __ptext23:	
  4204 ;; *************** function _I2C_Begin *****************
  4205 ;; Defined at:
  4206 ;;		line 28 in file "./PIC16F877a_I2C.h"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0, pclath, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0
  4223 ;;      Totals:         0       0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 1
  4227 ;; This function calls:
  4228 ;;		_I2C_Hold
  4229 ;; This function is called by:
  4230 ;;		_Update_Current_Date_Time
  4231 ;;		_Set_Time_Date
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235  0E1C                     _I2C_Begin:	
  4236                           ;psect for function _I2C_Begin
  4237                           
  4238  0E1C                     l1559:	
  4239                           ;incstack = 0
  4240                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  4241                           
  4242                           
  4243                           ;./PIC16F877a_I2C.h: 30:   I2C_Hold();
  4244  0E1C  120A  158A  2643  120A  158A  	fcall	_I2C_Hold
  4245  0E21                     l1561:
  4246                           
  4247                           ;./PIC16F877a_I2C.h: 31:   SEN = 1;
  4248  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  4249  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  4250  0E23  1411               	bsf	17,0	;volatile
  4251  0E24                     l140:
  4252  0E24  0008               	return
  4253  0E25                     __end_of_I2C_Begin:
  4254                           
  4255                           	psect	text24
  4256  0E43                     __ptext24:	
  4257 ;; *************** function _I2C_Hold *****************
  4258 ;; Defined at:
  4259 ;;		line 23 in file "./PIC16F877a_I2C.h"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_I2C_Begin
  4283 ;;		_I2C_End
  4284 ;;		_I2C_Write
  4285 ;;		_I2C_Read
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289  0E43                     _I2C_Hold:	
  4290                           ;psect for function _I2C_Hold
  4291                           
  4292  0E43                     l1509:	
  4293                           ;incstack = 0
  4294                           ; Regs used in _I2C_Hold: [wreg+status,2]
  4295                           
  4296  0E43                     l1511:	
  4297                           ;./PIC16F877a_I2C.h: 25:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) 
      +                          ;
  4298                           
  4299  0E43  1683               	bsf	3,5	;RP0=1, select bank1
  4300  0E44  1303               	bcf	3,6	;RP1=0, select bank1
  4301  0E45  0811               	movf	17,w	;volatile
  4302  0E46  391F               	andlw	31
  4303  0E47  1D03               	btfss	3,2
  4304  0E48  2E4A               	goto	u891
  4305  0E49  2E4B               	goto	u890
  4306  0E4A                     u891:
  4307  0E4A  2E43               	goto	l1511
  4308  0E4B                     u890:
  4309  0E4B                     l1513:
  4310  0E4B  1914               	btfsc	20,2	;volatile
  4311  0E4C  2E4E               	goto	u901
  4312  0E4D  2E4F               	goto	u900
  4313  0E4E                     u901:
  4314  0E4E  2E43               	goto	l1511
  4315  0E4F                     u900:
  4316  0E4F                     l137:
  4317  0E4F  0008               	return
  4318  0E50                     __end_of_I2C_Hold:
  4319                           
  4320                           	psect	text25
  4321  0F27                     __ptext25:	
  4322 ;; *************** function _BCD_2_DEC *****************
  4323 ;; Defined at:
  4324 ;;		line 16 in file "./PIC16F877a_DS3231.h"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  to_convert      2    6[COMMON] int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2    6[COMMON] int 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         2       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0
  4340 ;;      Temps:          2       0       0       0       0
  4341 ;;      Totals:         4       0       0       0       0
  4342 ;;Total ram usage:        4 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 1
  4345 ;; This function calls:
  4346 ;;		___wmul
  4347 ;; This function is called by:
  4348 ;;		_Update_Current_Date_Time
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352  0F27                     _BCD_2_DEC:	
  4353                           ;psect for function _BCD_2_DEC
  4354                           
  4355  0F27                     l1587:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  4358                           
  4359                           
  4360                           ;./PIC16F877a_DS3231.h: 16: int BCD_2_DEC(int to_convert);./PIC16F877a_DS3231.h: 17: {;.
      +                          /PIC16F877a_DS3231.h: 18:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  4361  0F27  300F               	movlw	15
  4362  0F28  0576               	andwf	BCD_2_DEC@to_convert,w
  4363  0F29  00F8               	movwf	??_BCD_2_DEC
  4364  0F2A  3000               	movlw	0
  4365  0F2B  0577               	andwf	BCD_2_DEC@to_convert+1,w
  4366  0F2C  00F9               	movwf	??_BCD_2_DEC+1
  4367  0F2D  0E76               	swapf	BCD_2_DEC@to_convert,w
  4368  0F2E  390F               	andlw	15
  4369  0F2F  00F0               	movwf	___wmul@multiplier
  4370  0F30  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  4371  0F31  39F0               	andlw	240
  4372  0F32  04F0               	iorwf	___wmul@multiplier,f
  4373  0F33  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  4374  0F34  390F               	andlw	15
  4375  0F35  00F1               	movwf	___wmul@multiplier+1
  4376  0F36  30F0               	movlw	240
  4377  0F37  1DF1               	btfss	___wmul@multiplier+1,3
  4378  0F38  3000               	movlw	0
  4379  0F39  04F1               	iorwf	___wmul@multiplier+1,f
  4380  0F3A  300A               	movlw	10
  4381  0F3B  00F2               	movwf	___wmul@multiplicand
  4382  0F3C  3000               	movlw	0
  4383  0F3D  00F3               	movwf	___wmul@multiplicand+1
  4384  0F3E  120A  158A  2702  120A  158A  	fcall	___wmul
  4385  0F43  0878               	movf	??_BCD_2_DEC,w
  4386  0F44  0770               	addwf	?___wmul,w
  4387  0F45  00F6               	movwf	?_BCD_2_DEC
  4388  0F46  0879               	movf	??_BCD_2_DEC+1,w
  4389  0F47  1803               	skipnc
  4390  0F48  0A79               	incf	??_BCD_2_DEC+1,w
  4391  0F49  0771               	addwf	?___wmul+1,w
  4392  0F4A  00F7               	movwf	?_BCD_2_DEC+1
  4393  0F4B                     l152:
  4394  0F4B  0008               	return
  4395  0F4C                     __end_of_BCD_2_DEC:
  4396                           
  4397                           	psect	text26
  4398  0F02                     __ptext26:	
  4399 ;; *************** function ___wmul *****************
  4400 ;; Defined at:
  4401 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  multiplier      2    0[COMMON] unsigned int 
  4404 ;;  multiplicand    2    2[COMMON] unsigned int 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  product         2    4[COMMON] unsigned int 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  2    0[COMMON] unsigned int 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4416 ;;      Params:         4       0       0       0       0
  4417 ;;      Locals:         2       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0
  4419 ;;      Totals:         6       0       0       0       0
  4420 ;;Total ram usage:        6 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_BCD_2_DEC
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429  0F02                     ___wmul:	
  4430                           ;psect for function ___wmul
  4431                           
  4432  0F02                     l1545:	
  4433                           ;incstack = 0
  4434                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4435                           
  4436  0F02  01F4               	clrf	___wmul@product
  4437  0F03  01F5               	clrf	___wmul@product+1
  4438  0F04                     l1547:
  4439  0F04  1C70               	btfss	___wmul@multiplier,0
  4440  0F05  2F07               	goto	u921
  4441  0F06  2F08               	goto	u920
  4442  0F07                     u921:
  4443  0F07  2F0E               	goto	l381
  4444  0F08                     u920:
  4445  0F08                     l1549:
  4446  0F08  0872               	movf	___wmul@multiplicand,w
  4447  0F09  07F4               	addwf	___wmul@product,f
  4448  0F0A  1803               	skipnc
  4449  0F0B  0AF5               	incf	___wmul@product+1,f
  4450  0F0C  0873               	movf	___wmul@multiplicand+1,w
  4451  0F0D  07F5               	addwf	___wmul@product+1,f
  4452  0F0E                     l381:
  4453  0F0E  3001               	movlw	1
  4454  0F0F                     u935:
  4455  0F0F  1003               	clrc
  4456  0F10  0DF2               	rlf	___wmul@multiplicand,f
  4457  0F11  0DF3               	rlf	___wmul@multiplicand+1,f
  4458  0F12  3EFF               	addlw	-1
  4459  0F13  1D03               	skipz
  4460  0F14  2F0F               	goto	u935
  4461  0F15                     l1551:
  4462  0F15  3001               	movlw	1
  4463  0F16                     u945:
  4464  0F16  1003               	clrc
  4465  0F17  0CF1               	rrf	___wmul@multiplier+1,f
  4466  0F18  0CF0               	rrf	___wmul@multiplier,f
  4467  0F19  3EFF               	addlw	-1
  4468  0F1A  1D03               	skipz
  4469  0F1B  2F16               	goto	u945
  4470  0F1C                     l1553:
  4471  0F1C  0870               	movf	___wmul@multiplier,w
  4472  0F1D  0471               	iorwf	___wmul@multiplier+1,w
  4473  0F1E  1D03               	btfss	3,2
  4474  0F1F  2F21               	goto	u951
  4475  0F20  2F22               	goto	u950
  4476  0F21                     u951:
  4477  0F21  2F04               	goto	l1547
  4478  0F22                     u950:
  4479  0F22                     l1555:
  4480  0F22  0875               	movf	___wmul@product+1,w
  4481  0F23  00F1               	movwf	?___wmul+1
  4482  0F24  0874               	movf	___wmul@product,w
  4483  0F25  00F0               	movwf	?___wmul
  4484  0F26                     l383:
  4485  0F26  0008               	return
  4486  0F27                     __end_of___wmul:
  4487                           
  4488                           	psect	text27
  4489  00D7                     __ptext27:	
  4490 ;; *************** function _I2C_Initialize *****************
  4491 ;; Defined at:
  4492 ;;		line 12 in file "./PIC16F877a_I2C.h"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  feq_K           4   13[BANK0 ] const unsigned long 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       4       0       0       0
  4507 ;;      Locals:         0       0       0       0       0
  4508 ;;      Temps:          0       4       0       0       0
  4509 ;;      Totals:         0       8       0       0       0
  4510 ;;Total ram usage:        8 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 1
  4513 ;; This function calls:
  4514 ;;		___lldiv
  4515 ;;		___lmul
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521  00D7                     _I2C_Initialize:	
  4522                           ;psect for function _I2C_Initialize
  4523                           
  4524  00D7                     l1783:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4527                           
  4528                           
  4529                           ;./PIC16F877a_I2C.h: 12: void I2C_Initialize(const unsigned long feq_K);./PIC16F877a_I2C
      +                          .h: 13: {;./PIC16F877a_I2C.h: 14:   TRISC3 = 1; TRISC4 = 1;
  4530  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  4531  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  4532  00D9  1587               	bsf	7,3	;volatile
  4533  00DA  1607               	bsf	7,4	;volatile
  4534  00DB                     l1785:
  4535                           
  4536                           ;./PIC16F877a_I2C.h: 16:   SSPCON = 0b00101000;
  4537  00DB  3028               	movlw	40
  4538  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4539  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4540  00DE  0094               	movwf	20	;volatile
  4541  00DF                     l1787:
  4542                           
  4543                           ;./PIC16F877a_I2C.h: 17:   SSPCON2 = 0b00000000;
  4544  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  4545  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  4546  00E1  0191               	clrf	17	;volatile
  4547  00E2                     l1789:
  4548                           
  4549                           ;./PIC16F877a_I2C.h: 19:   SSPADD = (20000000/(4*feq_K*100))-1;
  4550  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4551  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4552  00E4  082D               	movf	I2C_Initialize@feq_K,w
  4553  00E5  00B1               	movwf	??_I2C_Initialize
  4554  00E6  082E               	movf	I2C_Initialize@feq_K+1,w
  4555  00E7  00B2               	movwf	??_I2C_Initialize+1
  4556  00E8  082F               	movf	I2C_Initialize@feq_K+2,w
  4557  00E9  00B3               	movwf	??_I2C_Initialize+2
  4558  00EA  0830               	movf	I2C_Initialize@feq_K+3,w
  4559  00EB  00B4               	movwf	??_I2C_Initialize+3
  4560  00EC  3002               	movlw	2
  4561  00ED                     u1395:
  4562  00ED  1003               	clrc
  4563  00EE  0DB1               	rlf	??_I2C_Initialize,f
  4564  00EF  0DB2               	rlf	??_I2C_Initialize+1,f
  4565  00F0  0DB3               	rlf	??_I2C_Initialize+2,f
  4566  00F1  0DB4               	rlf	??_I2C_Initialize+3,f
  4567  00F2                     u1390:
  4568  00F2  3EFF               	addlw	-1
  4569  00F3  1D03               	skipz
  4570  00F4  28ED               	goto	u1395
  4571  00F5  0834               	movf	??_I2C_Initialize+3,w
  4572  00F6  00F3               	movwf	___lmul@multiplier+3
  4573  00F7  0833               	movf	??_I2C_Initialize+2,w
  4574  00F8  00F2               	movwf	___lmul@multiplier+2
  4575  00F9  0832               	movf	??_I2C_Initialize+1,w
  4576  00FA  00F1               	movwf	___lmul@multiplier+1
  4577  00FB  0831               	movf	??_I2C_Initialize,w
  4578  00FC  00F0               	movwf	___lmul@multiplier
  4579  00FD  3000               	movlw	0
  4580  00FE  00F7               	movwf	___lmul@multiplicand+3
  4581  00FF  3000               	movlw	0
  4582  0100  00F6               	movwf	___lmul@multiplicand+2
  4583  0101  3000               	movlw	0
  4584  0102  00F5               	movwf	___lmul@multiplicand+1
  4585  0103  3064               	movlw	100
  4586  0104  00F4               	movwf	___lmul@multiplicand
  4587  0105  120A  118A  2048  120A  118A  	fcall	___lmul
  4588  010A  0873               	movf	?___lmul+3,w
  4589  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4590  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4591  010D  00A3               	movwf	___lldiv@divisor+3
  4592  010E  0872               	movf	?___lmul+2,w
  4593  010F  00A2               	movwf	___lldiv@divisor+2
  4594  0110  0871               	movf	?___lmul+1,w
  4595  0111  00A1               	movwf	___lldiv@divisor+1
  4596  0112  0870               	movf	?___lmul,w
  4597  0113  00A0               	movwf	___lldiv@divisor
  4598  0114  3001               	movlw	1
  4599  0115  00A7               	movwf	___lldiv@dividend+3
  4600  0116  3031               	movlw	49
  4601  0117  00A6               	movwf	___lldiv@dividend+2
  4602  0118  302D               	movlw	45
  4603  0119  00A5               	movwf	___lldiv@dividend+1
  4604  011A  3000               	movlw	0
  4605  011B  00A4               	movwf	___lldiv@dividend
  4606  011C  120A  118A  2242  120A  118A  	fcall	___lldiv
  4607  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4608  0122  1303               	bcf	3,6	;RP1=0, select bank0
  4609  0123  0820               	movf	?___lldiv,w
  4610  0124  3EFF               	addlw	255
  4611  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4612  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4613  0127  0093               	movwf	19	;volatile
  4614  0128                     l1791:
  4615                           
  4616                           ;./PIC16F877a_I2C.h: 20:   SSPSTAT = 0b00000000;
  4617  0128  0194               	clrf	20	;volatile
  4618  0129                     l131:
  4619  0129  0008               	return
  4620  012A                     __end_of_I2C_Initialize:
  4621                           
  4622                           	psect	text28
  4623  0048                     __ptext28:	
  4624 ;; *************** function ___lmul *****************
  4625 ;; Defined at:
  4626 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul32.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  multiplier      4    0[COMMON] unsigned long 
  4629 ;;  multiplicand    4    4[COMMON] unsigned long 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  product         4    9[COMMON] unsigned long 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  4    0[COMMON] unsigned long 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         8       0       0       0       0
  4642 ;;      Locals:         4       0       0       0       0
  4643 ;;      Temps:          1       0       0       0       0
  4644 ;;      Totals:        13       0       0       0       0
  4645 ;;Total ram usage:       13 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_I2C_Initialize
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654  0048                     ___lmul:	
  4655                           ;psect for function ___lmul
  4656                           
  4657  0048                     l1663:	
  4658                           ;incstack = 0
  4659                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4660                           
  4661  0048  3000               	movlw	0
  4662  0049  00FC               	movwf	___lmul@product+3
  4663  004A  3000               	movlw	0
  4664  004B  00FB               	movwf	___lmul@product+2
  4665  004C  3000               	movlw	0
  4666  004D  00FA               	movwf	___lmul@product+1
  4667  004E  3000               	movlw	0
  4668  004F  00F9               	movwf	___lmul@product
  4669  0050                     l1665:
  4670  0050  1C70               	btfss	___lmul@multiplier,0
  4671  0051  2853               	goto	u1081
  4672  0052  2854               	goto	u1080
  4673  0053                     u1081:
  4674  0053  286B               	goto	l1669
  4675  0054                     u1080:
  4676  0054                     l1667:
  4677  0054  0874               	movf	___lmul@multiplicand,w
  4678  0055  07F9               	addwf	___lmul@product,f
  4679  0056  0875               	movf	___lmul@multiplicand+1,w
  4680  0057  1103               	clrz
  4681  0058  1803               	skipnc
  4682  0059  3E01               	addlw	1
  4683  005A  1903               	skipnz
  4684  005B  285D               	goto	u1091
  4685  005C  07FA               	addwf	___lmul@product+1,f
  4686  005D                     u1091:
  4687  005D  0876               	movf	___lmul@multiplicand+2,w
  4688  005E  1103               	clrz
  4689  005F  1803               	skipnc
  4690  0060  3E01               	addlw	1
  4691  0061  1903               	skipnz
  4692  0062  2864               	goto	u1092
  4693  0063  07FB               	addwf	___lmul@product+2,f
  4694  0064                     u1092:
  4695  0064  0877               	movf	___lmul@multiplicand+3,w
  4696  0065  1103               	clrz
  4697  0066  1803               	skipnc
  4698  0067  3E01               	addlw	1
  4699  0068  1903               	skipnz
  4700  0069  286B               	goto	u1093
  4701  006A  07FC               	addwf	___lmul@product+3,f
  4702  006B                     u1093:
  4703  006B                     l1669:
  4704  006B  3001               	movlw	1
  4705  006C  00F8               	movwf	??___lmul
  4706  006D                     u1105:
  4707  006D  1003               	clrc
  4708  006E  0DF4               	rlf	___lmul@multiplicand,f
  4709  006F  0DF5               	rlf	___lmul@multiplicand+1,f
  4710  0070  0DF6               	rlf	___lmul@multiplicand+2,f
  4711  0071  0DF7               	rlf	___lmul@multiplicand+3,f
  4712  0072  0BF8               	decfsz	??___lmul,f
  4713  0073  286D               	goto	u1105
  4714  0074                     l1671:
  4715  0074  3001               	movlw	1
  4716  0075                     u1115:
  4717  0075  1003               	clrc
  4718  0076  0CF3               	rrf	___lmul@multiplier+3,f
  4719  0077  0CF2               	rrf	___lmul@multiplier+2,f
  4720  0078  0CF1               	rrf	___lmul@multiplier+1,f
  4721  0079  0CF0               	rrf	___lmul@multiplier,f
  4722  007A  3EFF               	addlw	-1
  4723  007B  1D03               	skipz
  4724  007C  2875               	goto	u1115
  4725  007D  0873               	movf	___lmul@multiplier+3,w
  4726  007E  0472               	iorwf	___lmul@multiplier+2,w
  4727  007F  0471               	iorwf	___lmul@multiplier+1,w
  4728  0080  0470               	iorwf	___lmul@multiplier,w
  4729  0081  1D03               	skipz
  4730  0082  2884               	goto	u1121
  4731  0083  2885               	goto	u1120
  4732  0084                     u1121:
  4733  0084  2850               	goto	l1665
  4734  0085                     u1120:
  4735  0085                     l1673:
  4736  0085  087C               	movf	___lmul@product+3,w
  4737  0086  00F3               	movwf	?___lmul+3
  4738  0087  087B               	movf	___lmul@product+2,w
  4739  0088  00F2               	movwf	?___lmul+2
  4740  0089  087A               	movf	___lmul@product+1,w
  4741  008A  00F1               	movwf	?___lmul+1
  4742  008B  0879               	movf	___lmul@product,w
  4743  008C  00F0               	movwf	?___lmul
  4744  008D                     l395:
  4745  008D  0008               	return
  4746  008E                     __end_of___lmul:
  4747                           
  4748                           	psect	text29
  4749  0242                     __ptext29:	
  4750 ;; *************** function ___lldiv *****************
  4751 ;; Defined at:
  4752 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  divisor         4    0[BANK0 ] unsigned long 
  4755 ;;  dividend        4    4[BANK0 ] unsigned long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quotient        4    8[BANK0 ] unsigned long 
  4758 ;;  counter         1   12[BANK0 ] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4    0[BANK0 ] unsigned long 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4768 ;;      Params:         0       8       0       0       0
  4769 ;;      Locals:         0       5       0       0       0
  4770 ;;      Temps:          1       0       0       0       0
  4771 ;;      Totals:         1      13       0       0       0
  4772 ;;Total ram usage:       14 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_I2C_Initialize
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781  0242                     ___lldiv:	
  4782                           ;psect for function ___lldiv
  4783                           
  4784  0242                     l1677:	
  4785                           ;incstack = 0
  4786                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4787                           
  4788  0242  3000               	movlw	0
  4789  0243  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0244  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0245  00AB               	movwf	___lldiv@quotient+3
  4792  0246  3000               	movlw	0
  4793  0247  00AA               	movwf	___lldiv@quotient+2
  4794  0248  3000               	movlw	0
  4795  0249  00A9               	movwf	___lldiv@quotient+1
  4796  024A  3000               	movlw	0
  4797  024B  00A8               	movwf	___lldiv@quotient
  4798  024C  0823               	movf	___lldiv@divisor+3,w
  4799  024D  0422               	iorwf	___lldiv@divisor+2,w
  4800  024E  0421               	iorwf	___lldiv@divisor+1,w
  4801  024F  0420               	iorwf	___lldiv@divisor,w
  4802  0250  1903               	skipnz
  4803  0251  2A53               	goto	u1131
  4804  0252  2A54               	goto	u1130
  4805  0253                     u1131:
  4806  0253  2AA1               	goto	l1697
  4807  0254                     u1130:
  4808  0254                     l1679:
  4809  0254  01AC               	clrf	___lldiv@counter
  4810  0255  0AAC               	incf	___lldiv@counter,f
  4811  0256  2A64               	goto	l1683
  4812  0257                     l1681:
  4813  0257  3001               	movlw	1
  4814  0258  00FD               	movwf	??___lldiv
  4815  0259                     u1145:
  4816  0259  1003               	clrc
  4817  025A  0DA0               	rlf	___lldiv@divisor,f
  4818  025B  0DA1               	rlf	___lldiv@divisor+1,f
  4819  025C  0DA2               	rlf	___lldiv@divisor+2,f
  4820  025D  0DA3               	rlf	___lldiv@divisor+3,f
  4821  025E  0BFD               	decfsz	??___lldiv,f
  4822  025F  2A59               	goto	u1145
  4823  0260  3001               	movlw	1
  4824  0261  00FD               	movwf	??___lldiv
  4825  0262  087D               	movf	??___lldiv,w
  4826  0263  07AC               	addwf	___lldiv@counter,f
  4827  0264                     l1683:
  4828  0264  1FA3               	btfss	___lldiv@divisor+3,7
  4829  0265  2A67               	goto	u1151
  4830  0266  2A68               	goto	u1150
  4831  0267                     u1151:
  4832  0267  2A57               	goto	l1681
  4833  0268                     u1150:
  4834  0268                     l1685:
  4835  0268  3001               	movlw	1
  4836  0269  00FD               	movwf	??___lldiv
  4837  026A                     u1165:
  4838  026A  1003               	clrc
  4839  026B  0DA8               	rlf	___lldiv@quotient,f
  4840  026C  0DA9               	rlf	___lldiv@quotient+1,f
  4841  026D  0DAA               	rlf	___lldiv@quotient+2,f
  4842  026E  0DAB               	rlf	___lldiv@quotient+3,f
  4843  026F  0BFD               	decfsz	??___lldiv,f
  4844  0270  2A6A               	goto	u1165
  4845  0271                     l1687:
  4846  0271  0823               	movf	___lldiv@divisor+3,w
  4847  0272  0227               	subwf	___lldiv@dividend+3,w
  4848  0273  1D03               	skipz
  4849  0274  2A7F               	goto	u1175
  4850  0275  0822               	movf	___lldiv@divisor+2,w
  4851  0276  0226               	subwf	___lldiv@dividend+2,w
  4852  0277  1D03               	skipz
  4853  0278  2A7F               	goto	u1175
  4854  0279  0821               	movf	___lldiv@divisor+1,w
  4855  027A  0225               	subwf	___lldiv@dividend+1,w
  4856  027B  1D03               	skipz
  4857  027C  2A7F               	goto	u1175
  4858  027D  0820               	movf	___lldiv@divisor,w
  4859  027E  0224               	subwf	___lldiv@dividend,w
  4860  027F                     u1175:
  4861  027F  1C03               	skipc
  4862  0280  2A82               	goto	u1171
  4863  0281  2A83               	goto	u1170
  4864  0282                     u1171:
  4865  0282  2A92               	goto	l1693
  4866  0283                     u1170:
  4867  0283                     l1689:
  4868  0283  0820               	movf	___lldiv@divisor,w
  4869  0284  02A4               	subwf	___lldiv@dividend,f
  4870  0285  0821               	movf	___lldiv@divisor+1,w
  4871  0286  1C03               	skipc
  4872  0287  0F21               	incfsz	___lldiv@divisor+1,w
  4873  0288  02A5               	subwf	___lldiv@dividend+1,f
  4874  0289  0822               	movf	___lldiv@divisor+2,w
  4875  028A  1C03               	skipc
  4876  028B  0F22               	incfsz	___lldiv@divisor+2,w
  4877  028C  02A6               	subwf	___lldiv@dividend+2,f
  4878  028D  0823               	movf	___lldiv@divisor+3,w
  4879  028E  1C03               	skipc
  4880  028F  0F23               	incfsz	___lldiv@divisor+3,w
  4881  0290  02A7               	subwf	___lldiv@dividend+3,f
  4882  0291                     l1691:
  4883  0291  1428               	bsf	___lldiv@quotient,0
  4884  0292                     l1693:
  4885  0292  3001               	movlw	1
  4886  0293                     u1185:
  4887  0293  1003               	clrc
  4888  0294  0CA3               	rrf	___lldiv@divisor+3,f
  4889  0295  0CA2               	rrf	___lldiv@divisor+2,f
  4890  0296  0CA1               	rrf	___lldiv@divisor+1,f
  4891  0297  0CA0               	rrf	___lldiv@divisor,f
  4892  0298  3EFF               	addlw	-1
  4893  0299  1D03               	skipz
  4894  029A  2A93               	goto	u1185
  4895  029B                     l1695:
  4896  029B  3001               	movlw	1
  4897  029C  02AC               	subwf	___lldiv@counter,f
  4898  029D  1D03               	btfss	3,2
  4899  029E  2AA0               	goto	u1191
  4900  029F  2AA1               	goto	u1190
  4901  02A0                     u1191:
  4902  02A0  2A68               	goto	l1685
  4903  02A1                     u1190:
  4904  02A1                     l1697:
  4905  02A1  082B               	movf	___lldiv@quotient+3,w
  4906  02A2  00A3               	movwf	?___lldiv+3
  4907  02A3  082A               	movf	___lldiv@quotient+2,w
  4908  02A4  00A2               	movwf	?___lldiv+2
  4909  02A5  0829               	movf	___lldiv@quotient+1,w
  4910  02A6  00A1               	movwf	?___lldiv+1
  4911  02A7  0828               	movf	___lldiv@quotient,w
  4912  02A8  00A0               	movwf	?___lldiv
  4913  02A9                     l417:
  4914  02A9  0008               	return
  4915  02AA                     __end_of___lldiv:
  4916  007E                     btemp	set	126	;btemp
  4917  007E                     wtemp0	set	126
  4918                           
  4919                           	psect	idloc
  4920                           
  4921                           ;Config register IDLOC0 @ 0x2000
  4922                           ;	unspecified, using default values
  4923  2000                     	org	8192
  4924  2000  3FFF               	dw	16383
  4925                           
  4926                           ;Config register IDLOC1 @ 0x2001
  4927                           ;	unspecified, using default values
  4928  2001                     	org	8193
  4929  2001  3FFF               	dw	16383
  4930                           
  4931                           ;Config register IDLOC2 @ 0x2002
  4932                           ;	unspecified, using default values
  4933  2002                     	org	8194
  4934  2002  3FFF               	dw	16383
  4935                           
  4936                           ;Config register IDLOC3 @ 0x2003
  4937                           ;	unspecified, using default values
  4938  2003                     	org	8195
  4939  2003  3FFF               	dw	16383
  4940                           
  4941                           	psect	config
  4942                           
  4943                           ;Config register CONFIG @ 0x2007
  4944                           ;	Oscillator Selection bits
  4945                           ;	FOSC = HS, HS oscillator
  4946                           ;	Watchdog Timer Enable bit
  4947                           ;	WDTE = OFF, WDT disabled
  4948                           ;	Power-up Timer Enable bit
  4949                           ;	PWRTE = OFF, PWRT disabled
  4950                           ;	Brown-out Reset Enable bit
  4951                           ;	BOREN = ON, BOR enabled
  4952                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4953                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4954                           ;	Data EEPROM Memory Code Protection bit
  4955                           ;	CPD = OFF, Data EEPROM code protection off
  4956                           ;	Flash Program Memory Write Enable bits
  4957                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4958                           ;	In-Circuit Debugger Mode bit
  4959                           ;	DEBUG = 0x1, unprogrammed default
  4960                           ;	Flash Program Memory Code Protection bit
  4961                           ;	CP = OFF, Code protection off
  4962  2007                     	org	8199
  4963  2007  3FFA               	dw	16378

Data Sizes:
    Strings     56
    Constant    0
    Data        11
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[9]), STR_6(CODE[11]), STR_5(CODE[4]), STR_4(CODE[3]), 
		 -> STR_3(CODE[15]), STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_display_stop_time
    _main->_get_controls
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _get_controls->_Lcd_Set_Cursor
    _display_stop_time->_Lcd_Set_Cursor
    _display_relay_status->_Lcd_Set_Cursor
    _display_current_time->_Lcd_Set_Cursor
    _Lcd_Print_String->_Lcd_Print_Char
    _display_current_date->_Lcd_Set_Cursor
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Print_Char->_Lcd_SetBit
    _Update_Current_Date_Time->_BCD_2_DEC
    _BCD_2_DEC->_I2C_Read
    _BCD_2_DEC->___wmul
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _I2C_Initialize->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   25677
                                             21 BANK0     14    14      0
                     _I2C_Initialize
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
           _Update_Current_Date_Time
                            ___awdiv
                            ___awmod
                             ___bmul
               _display_current_date
               _display_current_time
               _display_relay_status
                  _display_stop_time
                            _get_adc
                       _get_controls
                          _lcd_clear
                           _lcd_data
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_controls                                         3     3      0    2087
                                             11 COMMON     3     3      0
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (1) _get_adc                                              6     4      2      25
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _display_stop_time                                    3     3      0    2087
                                             11 COMMON     3     3      0
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (1) _display_relay_status                                 0     0      0    1909
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (1) _display_current_time                                 1     1      0    5419
                                             11 COMMON     1     1      0
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_String                                     3     3      0     499
                                              7 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (1) _display_current_date                                 7     7      0    5058
                                             11 COMMON     1     1      0
                                              0 BANK0      6     6      0
                     _Lcd_Print_Char
                     _Lcd_Set_Cursor
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1512
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1820
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1410
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_Char                                       6     6      0     178
                                              1 COMMON     6     6      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (4) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    2407
                          _BCD_2_DEC
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                              0 COMMON     2     0      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     653
                                              0 COMMON     6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     744
                                              6 COMMON     4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Hold
       ___wmul (ARG)
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Read
     _I2C_Write
       _I2C_Hold
   ___awdiv
   ___awmod
   ___bmul
   _display_current_date
     _Lcd_Print_Char
     _Lcd_Set_Cursor
     ___awdiv
     ___awmod
   _display_current_time
     _Lcd_Print_Char
     _Lcd_Print_String
     _Lcd_Set_Cursor
     ___awdiv
     ___awmod
   _display_relay_status
     _Lcd_Print_String
     _Lcd_Set_Cursor
   _display_stop_time
     _Lcd_Print_Char
     _Lcd_Print_String
     _Lcd_Set_Cursor
   _get_adc
   _get_controls
     _Lcd_Print_Char
     _Lcd_Print_String
     _Lcd_Set_Cursor
   _lcd_clear
     _lcd_cmd
   _lcd_data
   _lcd_init
     _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Jun 21 18:18:12 2022

                               pc 0002                      lcd_data@data 0072                    ___bmul@product 0072  
                    ___awdiv@sign 0076                                fsr 0004               ___wmul@multiplicand 0072  
                             l201 034E                               l131 0129                               l140 0E24  
                             l205 034E                               l213 0047                               l222 0F70  
                             l143 0E2D                               l152 0F4B                               l216 00D6  
                             l240 0E5E                               l137 0E4F                               l161 05B8  
                             l146 0E37                               l234 04D4                               l243 040F  
                             l251 05D3                               l260 05EB                               l149 0F9D  
                             l237 0181                               l181 0EBF                               l190 0F00  
                             l270 0614                               l246 05CA                               l166 0FFF  
                             l407 0E86                               l247 05C4                               l192 0F01  
                             l184 0EE9                               l256 05E1                               l417 02A9  
                             l185 0EEC                               l249 05C8                               l169 0FCE  
                             l186 0EF2                               l282 0EC0                               l274 068E  
                             l266 0601                               l187 0EF3                               l195 0EA0  
                             l188 0EF9                               l276 06AC                               l381 0F0E  
                             l189 0EFA                               l285 0EDF                               l534 0241  
                             l383 0F26                               l395 008D                               l547 01DA  
                             _RB0 0030                               _RB1 0031                               _RB2 0032  
                             _RB3 0033                               _RD0 0040                               _RB4 0034  
                             _RD1 0041                               _RD2 0042                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               _PEN 048A                               u900 0E4F  
                             _SEN 0488                               u901 0E4E                               u920 0F08  
                             u921 0F07                               u850 0EE5                               u851 0EE4  
                             u915 009F                               u860 0EF0                               u861 0EEF  
                             u950 0F22                               u870 0EF7                               u951 0F21  
                             u935 0F0F                               u871 0EF6                               u960 0F95  
                             u880 0EFE                               u945 0F16                               u961 0F91  
                             u881 0EFD                               u890 0E4B                               u891 0E4A  
                             u974 0F98                               u990 02B0                               u991 02AF  
                             u985 0FB6                               _day 005F                   __end_of_I2C_End 0E2E  
                             _min 0063                               _sec 004B                               _pos 0065  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                            l2031 06B9                              l2023 06AD                              l2041 06E2  
                            l2033 06BC                              l2025 06B3                              l2051 0712  
                            l2043 06EE                              l2035 06C1                              l2027 06B6  
                            l1501 0EE5                              l2061 0729                              l2053 0717  
                            l2045 0703                              l2037 06D0                              l2029 06B8  
                            l1511 0E43                              l1503 0EF0                              l2071 0780  
                            l2063 0734                              l2055 071C                              l2047 0708  
                            l2039 06DC                              l1513 0E4B                              l1505 0EF7  
                            l1521 0E94                              l1601 0FB0                              l2073 0796  
                            l2065 074A                              l2057 0721                              l2049 070D  
                            l1507 0EFE                              l1531 00AA                              l1523 0E9D  
                            l1515 0E88                              l1611 0FC2                              l1603 0FB3  
                            l2083 07B8                              l2075 07AC                              l2067 075A  
                            l2059 0726                              l1509 0E43                              l1541 00C6  
                            l1533 00AD                              l1525 008F                              l1517 0E8B  
                            l1621 02C6                              l1701 01DB                              l1613 0FCB  
                            l1605 0FBF                              l2085 07C6                              l2077 07B4  
                            l2069 0770                              l1551 0F15                              l1543 00D3  
                            l1535 00BA                              l1527 0099                              l1519 0E91  
                            l1631 02EF                              l1623 02CC                              l1615 02AB  
                            l1711 01EB                              l1703 01DC                              l1607 0FC0  
                            l2087 07CC                              l1553 0F1C                              l1545 0F02  
                            l1561 0E21                              l1537 00BD                              l1529 009C  
                            l1641 0318                              l1633 02F5                              l1617 02B0  
                            l1625 02D3                              l1721 01FF                              l1713 01F0  
                            l1705 01E0                              l1609 0FC1                              l1801 0FD5  
                            l2089 07D9                              l1555 0F22                              l1547 0F04  
                            l1563 0E25                              l1571 0F71                              l1539 00C3  
                            l1651 0341                              l1643 031E                              l1627 02D9  
                            l1635 02FC                              l1619 02C1                              l1731 0225  
                            l1723 0206                              l1715 01F4                              l1707 01E5  
                            l1811 0FE4                              l1803 0FD6                              l1549 0F08  
                            l1565 0E2A                              l1581 0F98                              l1573 0F76  
                            l1653 0347                              l1637 0302                              l1645 0325  
                            l1629 02EA                              l1741 023D                              l1733 0226  
                            l1725 020A                              l1717 01F6                              l1709 01E7  
                            l1661 0F63                              l1901 05F3                              l1821 0FFC  
                            l1813 0FF0                              l1805 0FD7                              l1671 0074  
                            l1663 0048                              l1559 0E1C                              l1583 0F99  
                            l1575 0F7E                              l1567 0E2E                              l1647 032B  
                            l1639 0313                              l1735 022D                              l1727 020E  
                            l1719 01FC                              l1751 018C                              l1655 0F4D  
                            l1831 0492                              l1911 0605                              l1903 05F9  
                            l1591 0F9F                              l1815 0FF1                              l1807 0FD8  
                            l1823 0EA1                              l1681 0257                              l1673 0085  
                            l1665 0050                              l1577 0F87                              l1569 0E33  
                            l1649 033C                              l1729 021F                              l1737 0233  
                            l1761 01A0                              l1753 018E                              l1745 0182  
                            l1657 0F50                              l1841 04BC                              l1833 049B  
                            l1921 0634                              l1913 0610                              l1905 05FC  
                            l1593 0FA4                              l1825 0041                              l1817 0FF2  
                            l1809 0FE1                              l1691 0291                              l1683 0264  
                            l1667 0054                              l1587 0F27                              l1579 0F8C  
                            l1499 0EE1                              l1739 0238                              l1771 01BF  
                            l1763 01A7                              l1755 0192                              l1747 0183  
                            l1659 0F5D                              l1843 04C2                              l1835 04A4  
                            l1827 0410                              l1851 0138                              l1931 0668  
                            l1907 05FD                              l1923 063A                              l1595 0FA5  
                            l1819 0FF3                              l1693 0292                              l1685 0268  
                            l1677 0242                              l1669 006B                              l1773 01C6  
                            l1765 01AB                              l1757 0197                              l1749 0187  
                            l1845 04CB                              l1837 04AA                              l1829 048C  
                            l1861 0162                              l1853 0141                              l1941 0687  
                            l1933 0675                              l1925 0641                              l1917 0618  
                            l1597 0FA6                              l1695 029B                              l1687 0271  
                            l1679 0254                              l1791 0128                              l1783 00D7  
                            l1767 01AF                              l1759 019D                              l1775 01CC  
                            l1839 04B3                              l1871 0E58                              l1863 0168  
                            l1855 014A                              l1847 012A                              l1951 0EC6  
                            l1943 068F                              l1927 064E                              l1935 0677  
                            l1919 0629                              l1599 0FA7                              l1689 0283  
                            l1697 02A1                              l1785 00DB                              l1961 0E74  
                            l1777 01D1                              l1769 01B9                              l1873 034F  
                            l1865 016E                              l1857 0150                              l1849 0132  
                            l1953 0ECF                              l1945 0699                              l1937 067C  
                            l1929 065B                              l1881 05CE                              l1787 00DF  
                            l1963 0E78                              l1779 01D6                              l1867 0174  
                            l1859 0159                              l1955 0EDB                              l1947 069F  
                            l1939 067D                              l1875 05B9                              l1789 00E2  
                            l1797 04D5                              l1965 0E7C                              l1869 0E50  
                            l1949 0EC0                              l1893 05E5                              l1885 05D7  
                            l1877 05BF                              l1967 0E7E                              l1959 0E73  
                            l1895 05E7                              l1887 05D8                              l1799 0FD0  
                            l1969 0E85                              l1889 05DD                              l1899 05EF  
                            STR_1 002C                              STR_2 0033                              STR_3 0009  
                            STR_4 003E                              STR_5 003A                              STR_6 0018  
                            STR_7 0023                              u1010 02D9                              u1011 02D8  
                            u1005 02B8                              u1030 0302                              u1031 0301  
                            u1120 0085                              u1200 01E0                              u1121 0084  
                            u1105 006D                              u1025 02E1                              u1201 01DF  
                            u1130 0254                              u1050 032B                              u1210 01EB  
                            u1131 0253                              u1115 0075                              u1051 032A  
                            u1211 01EA                              u1220 01FC                              u1300 0187  
                            u1045 030A                              u1221 01FB                              u1301 0186  
                            u1150 0268                              u1310 0192                              u1070 0F70  
                            u1151 0267                              u1311 0191                              u1071 0F6F  
                            u1080 0054                              u1240 020E                              u1320 019D  
                            u1145 0259                              u1081 0053                              u1065 0333  
                            u1241 020D                              u1321 019C                              u1170 0283  
                            u1410 05BF                              u1171 0282                              u1091 005D  
                            u1235 0200                              u1411 05BE                              u1092 0064  
                            u1260 021F                              u1340 01AF                              u1500 05EB  
                            u1420 05C4                              u1165 026A                              u1093 006B  
                            u1261 021E                              u1341 01AE                              u1501 05EA  
                            u1421 05C3                              u1405 0FE7                              u1190 02A1  
                            u1350 01B9                              u1510 05EF                              u1430 05C8  
                            u1191 02A0                              u1175 027F                              u1255 020F  
                            u1351 01B8                              u1335 01A1                              u1511 05EE  
                            u1431 05C7                              u1280 0233                              u1600 0668  
                            u1520 05F9                              u1440 05CE                              u1185 0293  
                            u1281 0232                              u1265 021B                              u1601 0667  
                            u1521 05F8                              u1441 05CD                              u1290 0238  
                            u1370 01CC                              u1610 0675                              u1530 0601  
                            u1450 05D3                              u1291 0237                              u1275 0227  
                            u1371 01CB                              u1355 01B5                              u1611 0674  
                            u1531 0600                              u1451 05D2                              u1380 01D1  
                            u1620 067C                              u1540 0605                              u1460 05D7  
                            u1381 01D0                              u1365 01C0                              u1621 067B  
                            u1605 0664                              u1541 0604                              u1461 05D6  
                            u1390 00F2                              u1630 0EC6                              u1550 0614  
                            u1470 05DD                              u1631 0EC5                              u1615 0671  
                            u1551 0613                              u1471 05DC                              u1640 0E78  
                            u1560 0618                              u1480 05E1                              u1641 0E77  
                            u1561 0617                              u1481 05E0                              u1650 0E85  
                            u1570 0641                              u1490 05E5                              u1395 00ED  
                            u1651 0E84                              u1571 0640                              u1491 05E4  
                            u1707 0FF7                              u1580 064E                              u1581 064D  
                            u1717 0FAB                              u1590 065B                              u1670 07D9  
                            u1591 065A                              u1727 0FC6                              u1671 07D8  
                            u1737 06A5                              u1585 064A                              u1747 017A  
                            u1595 0657                              u1675 07D5                              u1757 0E98  
                            u1767 00B3                              u1687 06FC                              u1777 00CC  
                            u1697 0FDC                              _RCEN 048B                    ??_get_controls 007B  
                            _main 06AD                              _byte 004D                              _hour 0061  
                __end_of_I2C_Hold 0E50                              _jump 0058                  __end_of_I2C_Read 0F9E  
                            _year 005B                              btemp 007E                              start 0000  
              Lcd_Print_Char@data 0076                   __end_of_Lcd_Cmd 0EA1                 ___bmul@multiplier 0073  
                      _Lcd_SetBit 0EE0            ??_display_relay_status 007B                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___awdiv 0242  
                           _EEADR 010D                   __end_of___awmod 01DB                   __end_of___lldiv 02AA  
                 ___awdiv@divisor 0070                   ___awdiv@counter 0075                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088               ___lmul@multiplicand 0074  
                 __end_of_get_adc 0EE0                   __end_of_lcd_cmd 0FCF                     _trigger_alarm 0059  
               __end_of_BCD_2_DEC 0F4C                 __end_of_I2C_Begin 0E25                             _min_0 0051  
                           _min_1 0050                             _sec_0 0053                             _sec_1 0052  
                           _month 005D                             main@i 0040                 __end_of_I2C_Write 0E38  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 07E6                      __end_of_main 07E6                         ??_I2C_End 0070  
                          ??_main 0035                            _ADCON0 001F                            _ADCON1 009F  
                          _ADRESH 001E                            _ADRESL 009E                            _EEDATA 010C  
                          _EECON2 018D                  ___awdiv@dividend 0072                         ??_Lcd_Cmd 0071  
                   main@newDigits 0038                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                __end_of_lcd_data 1000                  __end_of_lcd_init 0EC0                            ___bmul 0E72  
                          ___lmul 0048                            ___wmul 0F02                         ??___awdiv 0074  
                       ??___awmod 0074                         ??___lldiv 007D                       ?_Lcd_SetBit 0070  
                          _hour_0 004F                            _hour_1 004E                  ___awdiv@quotient 0077  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                         ??_get_adc 0072  
__end_of_Update_Current_Date_Time 05B9                         ??_lcd_cmd 0070              __end_of_get_controls 06AD  
                       ?_I2C_Hold 0070                         ?_I2C_Read 0070                   Lcd_Set_Cursor@a 0077  
                 Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078  
         __end_of__initialization 07FC               ___bmul@multiplicand 0070                    __pcstackCOMMON 0070  
                    __pidataBANK0 0E38                    _Lcd_Set_Cursor 02AA                        ??_I2C_Hold 0070  
                      ??_I2C_Read 0072                        __pbssBANK0 0043                  _Lcd_Print_String 0F4C  
                  _Lcd_Print_Char 008E                        __pmaintext 06AD                           ?___bmul 0070  
                         ?___lmul 0070                           ?___wmul 0070                           _I2C_End 0E25  
     display_current_date@month_0 0022       display_current_date@month_1 0023                    ___lmul@product 0079  
              Lcd_SetBit@data_bit 0070            __end_of_Lcd_Set_Cursor 034F                  I2C_Read@incoming 0074  
              get_adc@ADC_Results 0074          _Update_Current_Date_Time 04D5                           _SSPCON2 0091  
                       ?_lcd_data 0070                         ?_lcd_init 0070                           _SSPSTAT 0094  
                      __stringtab 0003                         _BCD_2_DEC 0F27                           _Lcd_Cmd 0E87  
          __end_of_Lcd_Print_Char 00D7                         _I2C_Begin 0E1C                         _I2C_Write 0E2E  
               __end_of_lcd_clear 0048                           ___awdiv 01DB                           ___awmod 0182  
                         ___lldiv 0242                    _I2C_Initialize 00D7                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0EA1                           __ptext2 0FCF                           __ptext3 0041  
                         __ptext4 0F9E                           __ptext5 05B9                           __ptext6 0EC0  
                         __ptext7 012A                           __ptext8 0E50                           __ptext9 0410  
                         _get_adc 0EC0                           _lcd_cmd 0F9E                  ___awmod@dividend 0072  
                      ??_lcd_data 0070                           clrloop0 0E15                        ??_lcd_init 0073  
            end_of_initialization 07FC                        ?_BCD_2_DEC 0076                        ?_I2C_Begin 0070  
                 ?_Lcd_Print_Char 0070                      _get_controls 05B9                        ?_I2C_Write 0070  
                 ___lldiv@divisor 0020                   ___lldiv@counter 002C            __end_of_I2C_Initialize 012A  
                    ??_Lcd_SetBit 0070                         _PORTCbits 0007                         _TRISCbits 0087  
                      lcd_cmd@cmd 0072                        main@Digits 003C                __end_of_Lcd_SetBit 0F02  
       display_current_date@day_0 0024         display_current_date@day_1 0025               BCD_2_DEC@to_convert 0076  
                 ?_I2C_Initialize 002D                    __end_of___bmul 0E87                    __end_of___lmul 008E  
                  __end_of___wmul 0F27          __end_of_Lcd_Print_String 0F71               start_initialization 07E6  
    __end_of_display_current_date 0410      __end_of_display_current_time 04D5                       ??_BCD_2_DEC 0078  
                     ??_I2C_Begin 0070                 Lcd_Print_String@a 0079                 Lcd_Print_String@i 0077  
                     ??_I2C_Write 0072                          ??___bmul 0071                          ??___lmul 0078  
                        ??___wmul 0074                        init_fetch0 0E5F                       __pdataBANK0 005B  
                        ?_I2C_End 0070        ??_Update_Current_Date_Time 007A        Lcd_Print_Char@Lower_Nibble 0074  
                       ___latbits 0002                     __pcstackBANK0 0020                          ?_Lcd_Cmd 0070  
                       _alarm_val 0043                       I2C_Read@ack 0070                  ??_Lcd_Set_Cursor 0075  
                        ?___awdiv 0070                          ?___awmod 0070        display_current_date@year_0 0020  
      display_current_date@year_1 0021                          ?___lldiv 0020                         _lcd_clear 0041  
                       __pstrings 0003                          ?_get_adc 0070                          ?_lcd_cmd 0070  
                        _I2C_Hold 0E43                          _I2C_Read 0F71                  ??_Lcd_Print_Char 0071  
                  ___wmul@product 0074      __end_of_display_relay_status 0E5F                         clear_ram0 0E14  
                       _set_alarm 005A                          Lcd_Cmd@a 0073                          _PIR2bits 000D  
            _display_current_date 034F                        ?_lcd_clear 0070              _display_current_time 0410  
                      _ADCON0bits 001F                       __stringbase 0008                 ___wmul@multiplier 0070  
                       main@value 0042                 ___lmul@multiplier 0070                 _display_stop_time 012A  
              ?_display_stop_time 0070                        _EECON1bits 018C                  ??_I2C_Initialize 0031  
             ??_display_stop_time 007B                     I2C_Write@data 0070             ?_display_current_date 0070  
           ?_display_current_time 0070                __end_of__stringtab 0009                 ?_Lcd_Print_String 0070  
              ??_Lcd_Print_String 0077                          _alarm_h0 0057                          _alarm_h1 0056  
                        _alarm_m0 0055                          _alarm_m1 0054         __end_of_display_stop_time 0182  
                        __ptext10 0F4C                          __ptext11 034F                          __ptext20 0E2E  
                        __ptext12 0182                          __ptext21 0F71                          __ptext13 01DB  
                        __ptext22 0E25                          __ptext14 02AA                          __ptext23 0E1C  
                        __ptext15 0E87                          __ptext24 0E43                          __ptext16 008E  
                        __ptext25 0F27                          __ptext17 0EE0                          __ptext26 0F02  
                        __ptext18 0E72                          __ptext27 00D7                          __ptext19 04D5  
                        __ptext28 0048                          __ptext29 0242                          _lcd_data 0FCF  
                        _lcd_init 0EA1               I2C_Initialize@feq_K 002D        Lcd_Print_Char@Upper_Nibble 0075  
                     ??_lcd_clear 0073              _display_relay_status 0E50                          init_ram0 0E63  
                ___lldiv@dividend 0024                         stringcode 0003            ??_display_current_date 007B  
          ??_display_current_time 007B                Lcd_Set_Cursor@temp 007A                        _OPTION_REG 0081  
           ?_display_relay_status 0070                  ___lldiv@quotient 0028                          stringdir 0003  
                        stringtab 0003         ?_Update_Current_Date_Time 0070                     ?_get_controls 0070  
